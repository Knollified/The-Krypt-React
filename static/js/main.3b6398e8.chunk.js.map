{"version":3,"sources":["Assets/Skull.gif","Pages/Home.js","Classes/Mob.js","Classes/Boss.js","Classes/Player.js","Assets/Skeleton_Warrior.gif","Assets/Skeleton_Archer.gif","Assets/Skeleton_Lancer.gif","Assets/Skeleton_Warlock.gif","Assets/Skeleton_King.gif","Assets/Skeleton_Rider.gif","Assets/Skeleton_Dragon.gif","Assets/Skeleton_Heratic.gif","Assets/Skeleton_Collector.gif","Assets/Skeleton_Titan.gif","Pages/Game.js","Assets/Mage.gif","Assets/Rouge.gif","Assets/Knight.gif","Pages/Class.js","Assets/ShopKeeper.gif","Pages/Shop.js","Pages/HowToPlay.js","components/GameEnter.js","App.js","reportWebVitals.js","index.js"],"names":["Home","changePage","className","src","Skull","alt","onClick","mob","mobType","health","maxHealth","attack","speed","defense","coin","img","exp","_mobType","_health","_maxHealth","_attack","_speed","_defense","_coin","_img","_exp","this","boss","bossType","_bossType","player","classType","special","level","mana","maxMana","_classType","_special","_level","_mana","_maxMana","number","console","log","Game","currentPlayer","setCurrentPlayer","score","bossChoice","setBossChoice","setScore","setSpecialAttack","specialAttackCount","Health","Math","floor","random","boss1Health","boss1MaxHealth","boss2Health","boss2MaxHealth","boss3Health","boss3MaxHealth","boss4Health","boss4MaxHealth","boss5Health","boss5MaxHealth","boss6Health","boss6MaxHealth","mobExpGain","bossExpGain","enemy1","Skeleton_Warrior","enemy2","Skeleton_Archer","enemy3","Skeleton_Lancer","enemy4","Skeleton_Warlock","boss1","Skeleton_Rider","boss2","Skeleton_Heratic","boss3","Skeleton_Collector","boss4","Skeleton_King","boss5","Skeleton_Dragon","boss6","Skeleton_Titan","useState","undefined","currentMob","setCurrentMob","currentBoss","setCurrentBoss","loading","setLoading","damageTake","setDamageTaken","damageTakeM","setDamageTakenM","mobList","enemyChoice","bossList","specialAttack","newStatePlayer","newStateMob","battleDamageMob","battleDamagePlayer","newStateBoss","Attack","useEffect","style","color","defend","specialAttack2","specialAttack3","Class","resetPlayer","Mage","Rouge","Knight","Shop","buyPotion","buySpecialAttack","buyHealthBoost","buyAttackBoost","buyDefenseBoost","buySpeedBoost","buySpecialBoost","ShopKeeper","HowToPlay","GameEnter","Player","page","setPage","str","pageToShow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b6398e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Skull.d4a418e2.gif\";","import Skull from '../Assets/Skull.gif'\r\nconst Home = ({changePage}) => {\r\n    return (\r\n        <div>\r\n         <header>\r\n            <h1>Welcome To The Krypt Enter If You Dare!</h1>\r\n          </header>\r\n          <div className=\"Image_Container\">\r\n            <img className=\"Skull_img\" src= { Skull } alt=\"\" />\r\n          </div>\r\n          <div className=\"Buttons\">\r\n            <div className=\"Button_1\" onClick={()=>changePage('Class')}>\r\n              <h2>Enter The Krypt</h2>\r\n            </div>\r\n            <div className=\"Button_2\" onClick={()=>changePage('HowToPlay') }>\r\n              <h2>How To Play</h2>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      )\r\n}\r\n\r\nexport default Home","export class mob {\r\n    _mobType = \"\";\r\n    _health = 0;\r\n    _maxHealth = 0;\r\n    _attack = 0;\r\n    _speed = 0;\r\n    _defense = 0;\r\n    _coin = 0;\r\n    _img = '';\r\n    _exp = 0;\r\n\r\n  \r\n    constructor(mobType, health, maxHealth, attack, speed, defense,coin, img , exp) {\r\n    this._mobType = mobType;\r\n    this._health = health;\r\n    this._maxHealth = maxHealth;\r\n    this._attack = attack;\r\n    this._speed = speed;\r\n    this._defense = defense;\r\n    this._coin = coin;\r\n    this._img = img;\r\n    this._exp = exp;\r\n\r\n  }\r\n  start(){\r\n      return {\r\n        _mobType :this._mobType,\r\n        _health :this._health,\r\n        _maxHealth: this._maxHealth,\r\n        _attack :this._attack,\r\n        _speed :this._speed,\r\n        _defense :this._defense,\r\n        _img :this._img,\r\n        _coin :this._coin,\r\n        _exp: this._exp\r\n\r\n\r\n      }\r\n  }\r\n  \r\n}\r\n","export class boss {\r\n    _bossType = \"\";\r\n    _health = 0;\r\n    _maxHealth = 0;\r\n    _attack = 0;\r\n    _speed = 0;\r\n    _defense = 0;\r\n    _coin = 0;\r\n    _img = '';\r\n  \r\n    constructor(bossType, health,  maxHealth, attack, speed, defense,coin, img) {\r\n    this._bossType = bossType;\r\n    this._health = health;\r\n    this._maxHealth = maxHealth;\r\n    this._attack = attack;\r\n    this._speed = speed;\r\n    this._defense = defense;\r\n    this._coin = coin;\r\n    this._img = img;\r\n\r\n  }\r\n  start(){\r\n      return {\r\n        _mobType :this._bossType,\r\n        _health :this._health,\r\n        _maxHealth: this._maxHealth,\r\n        _attack :this._attack,\r\n        _speed :this._speed,\r\n        _defense :this._defense,\r\n        _img :this._img,\r\n        _coin :this._coin,\r\n\r\n\r\n      }\r\n  }\r\n}\r\n","export class player {\r\n  _classType = \"\";\r\n  _maxHealth = 0;\r\n  _health = 0;\r\n  _attack = 0;\r\n  _speed = 0;\r\n  _defense = 0;\r\n  _special = 0;\r\n  _img = \"\";\r\n  _coin = 0;\r\n  _level = 0;\r\n  _mana = 0;\r\n  _maxMana = 0;\r\n  _exp = 0;\r\n\r\n  constructor(classType, health, maxHealth, attack, speed, defense, special, img, coin, level, mana, maxMana, exp) {\r\n    this._classType = classType;\r\n    this._maxHealth = maxHealth;\r\n    this._health = health;\r\n    this._attack = attack;\r\n    this._speed = speed;\r\n    this._defense = defense;\r\n    this._special =special;\r\n    this._img = img;\r\n    this._coin = coin;\r\n    this._level = level;\r\n    this._mana = mana;\r\n    this._maxMana = maxMana;\r\n    this._exp =exp;\r\n  }\r\n  start() {\r\n    return {\r\n      classType: this._classType,\r\n      _health: this._health,\r\n      _maxHealth: this._maxHealth,\r\n      _attack: this._attack,\r\n      _speed: this._speed,\r\n      _defense: this._defense,\r\n      _special: this._special,\r\n      _img: this._img,\r\n      _coin: this._coin,\r\n      _level: this._level,\r\n      _mana: this._mana,\r\n      _maxMana: this._maxMana,\r\n      _exp: this._exp\r\n    };\r\n  }\r\n  increaseLife(number) {\r\n    this._health = this._health + number;\r\n    console.log({\r\n      classType: this._classType,\r\n      _health: this._health,\r\n      _attack: this._attack,\r\n      _speed: this._speed,\r\n      _defense: this._defense,\r\n      _coin: this._coin,\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Skeleton_Warrior.f4013fea.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Archer.2e9e5bda.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Lancer.dfc99c4c.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Warlock.d8a35ab7.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_King.dc3218c1.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Rider.e893007b.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Dragon.ad09202b.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Heratic.fd7dc328.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Collector.d771cbab.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Titan.0679bdc8.gif\";","import { mob } from \"../Classes/Mob\";\r\nimport { boss } from \"../Classes/Boss\";\r\nimport { player } from \"../Classes/Player\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Skeleton_Warrior from \"../Assets/Skeleton_Warrior.gif\";\r\nimport Skeleton_Archer from \"../Assets/Skeleton_Archer.gif\";\r\nimport Skeleton_Lancer from \"../Assets/Skeleton_Lancer.gif\";\r\nimport Skeleton_Warlock from \"../Assets/Skeleton_Warlock.gif\";\r\nimport Skeleton_King from \"../Assets/Skeleton_King.gif\";\r\nimport Skeleton_Rider from \"../Assets/Skeleton_Rider.gif\";\r\nimport Skeleton_Dragon from \"../Assets/Skeleton_Dragon.gif\";\r\nimport Skeleton_Heratic from \"../Assets/Skeleton_Heratic.gif\";\r\nimport Skeleton_Collector from \"../Assets/Skeleton_Collector.gif\";\r\nimport Skeleton_Titan from \"../Assets/Skeleton_Titan.gif\";\r\n\r\nconst Game = ({\r\n  changePage,\r\n  currentPlayer,\r\n  setCurrentPlayer,\r\n  score,\r\n  bossChoice,\r\n  setBossChoice,\r\n  setScore,\r\n  specialAttackCount,\r\n  setSpecialAttack,\r\n}) => {\r\n  //Mobs\r\n  let Health = Math.floor(Math.random() * (20 - 10) + 10);\r\n  let maxHealth = Health;\r\n\r\n  let boss1Health = Math.floor(Math.random() * (35 - 25) + 25);\r\n  let boss1MaxHealth = boss1Health;\r\n\r\n  let boss2Health = Math.floor(Math.random() * (35 - 25) + 25);\r\n  let boss2MaxHealth = boss2Health;\r\n\r\n  let boss3Health = Math.floor(Math.random() * (35 - 25) + 25);\r\n  let boss3MaxHealth = boss3Health;\r\n\r\n  let boss4Health = Math.floor(Math.random() * (40 - 35) + 35);\r\n  let boss4MaxHealth = boss4Health;\r\n\r\n  let boss5Health = Math.floor(Math.random() * (45 - 40) + 40);\r\n  let boss5MaxHealth = boss5Health;\r\n\r\n  let boss6Health = Math.floor(Math.random() * (65 - 55) + 55);\r\n  let boss6MaxHealth = boss6Health;\r\n\r\n  let mobExpGain = Math.floor(Math.random() * (10 - 5) + 5);\r\n\r\n  let bossExpGain = Math.floor(Math.random() * (50 - 25) + 25);\r\n\r\n  let enemy1 = new mob(\r\n    \"Skeleton Warrior\",\r\n    Health,\r\n    maxHealth,\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Warrior,\r\n    mobExpGain\r\n  );\r\n  let enemy2 = new mob(\r\n    \"Skeleton Archer\",\r\n    Health,\r\n    maxHealth,\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Archer,\r\n    mobExpGain\r\n  );\r\n  let enemy3 = new mob(\r\n    \"Skeleton Lancer\",\r\n    Health,\r\n    maxHealth,\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Lancer,\r\n    mobExpGain\r\n  );\r\n  let enemy4 = new mob(\r\n    \"Skeleton Warlock\",\r\n    Health,\r\n    maxHealth,\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Warlock,\r\n    mobExpGain\r\n  );\r\n  //Bosses\r\n  let boss1 = new boss(\r\n    \"Skeleton Rider\",\r\n    boss1Health,\r\n    boss1MaxHealth,\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    20,\r\n    Skeleton_Rider,\r\n    bossExpGain\r\n  );\r\n  let boss2 = new boss(\r\n    \"Skeleton Heratic\",\r\n    boss2Health,\r\n    boss2MaxHealth,\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    20,\r\n    Skeleton_Heratic,\r\n    bossExpGain\r\n  );\r\n  let boss3 = new boss(\r\n    \"Skeleton Collector\",\r\n    boss3Health,\r\n    boss3MaxHealth,\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    20,\r\n    Skeleton_Collector,\r\n    bossExpGain\r\n  );\r\n  let boss4 = new boss(\r\n    \"Skeleton King\",\r\n    boss4Health,\r\n    boss4MaxHealth,\r\n    Math.floor(Math.random() * (12 - 8) + 8),\r\n    Math.floor(Math.random() * (12 - 8) + 8),\r\n    Math.floor(Math.random() * (12 - 8) + 8),\r\n    20,\r\n    Skeleton_King,\r\n    bossExpGain\r\n  );\r\n  let boss5 = new boss(\r\n    \"Skeleton Dragon\",\r\n    boss5Health,\r\n    boss5MaxHealth,\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    20,\r\n    Skeleton_Dragon,\r\n    bossExpGain\r\n  );\r\n  let boss6 = new boss(\r\n    \"Skeleton Titan\",\r\n    boss6Health,\r\n    boss6MaxHealth,\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    20,\r\n    Skeleton_Titan,\r\n    bossExpGain,\r\n  );\r\n\r\n  const [currentMob, setCurrentMob] = useState(undefined);\r\n  const [currentBoss, setCurrentBoss] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [damageTake, setDamageTaken] = useState(0);\r\n  const [damageTakeM, setDamageTakenM] = useState(0);\r\n\r\n  let mobList = [enemy1, enemy2, enemy3, enemy4];\r\n  let enemyChoice = Math.floor(Math.random() * (4 - 0) + 0);\r\n  let bossList = [boss1, boss2, boss3, boss4, boss5, boss6];\r\n\r\n  const nextButtonHandler = () => {\r\n    if (score % 5 === 0) {\r\n      setCurrentMob(undefined);\r\n      setCurrentBoss(bossList[bossChoice]);\r\n    } else {\r\n      setCurrentBoss(undefined);\r\n      setCurrentMob(mobList[enemyChoice]);\r\n    }\r\n  };\r\n  // Player Defend\r\n  const defend = () => {\r\n    if (currentMob) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateMob = { ...currentMob };\r\n      if (newStatePlayer._health - newStateMob._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamagePlayer = () => {\r\n          if (newStateMob._attack <= newStatePlayer._defense) {\r\n            return 0;\r\n          } else if (newStateMob._attack > newStatePlayer._defense) {\r\n            return newStateMob._attack - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStatePlayer._health = newStatePlayer._health - battleDamagePlayer();\r\n        setCurrentPlayer(newStatePlayer);\r\n        setDamageTaken(battleDamagePlayer());\r\n      }\r\n    } else if (currentBoss) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateBoss = { ...currentBoss };\r\n      if (newStatePlayer._health - newStateBoss._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamagePlayer = () => {\r\n          if (currentBoss._attack <= newStatePlayer._defense) {\r\n            return 0;\r\n          } else if (currentBoss._attack > newStatePlayer._defense) {\r\n            return newStateBoss - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStatePlayer._health = newStatePlayer._health - battleDamagePlayer();\r\n        setCurrentPlayer(newStatePlayer);\r\n        setDamageTaken(battleDamagePlayer());\r\n      }\r\n    }\r\n  };\r\n  //Special Attack\r\n  const specialAttack = () => {\r\n    if (currentMob) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateMob = { ...currentMob };\r\n      if (\r\n        newStatePlayer._health +\r\n          newStatePlayer._defense -\r\n          newStateMob._attack <=\r\n        0\r\n      ) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (\r\n        newStateMob._health +\r\n          newStateMob._defense -\r\n          (newStatePlayer._attack + newStatePlayer._special) <=\r\n        0\r\n      ) {\r\n        newStateMob._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentMob(newStateMob);\r\n        setCurrentPlayer(newStatePlayer);\r\n        setSpecialAttack(0);\r\n      } else {\r\n        if (newStatePlayer._speed > newStateMob._speed) {\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateMob._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateMob._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateMob._defense\r\n              );\r\n            }\r\n          };\r\n          let battleDamagePlayer = () => {\r\n            if (newStateMob._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateMob._attack > newStatePlayer._defense) {\r\n              return newStateMob._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          newStateMob._health = newStateMob._health - battleDamageMob();\r\n          setCurrentMob(newStateMob);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else if (newStateMob._speed > newStatePlayer._speed) {\r\n          let battleDamagePlayer = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStatePlayer._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStatePlayer._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStatePlayer._defense\r\n              );\r\n            }\r\n          };\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateMob._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateMob._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateMob._defense\r\n              );\r\n            }\r\n          };\r\n          newStateMob._health = newStateMob._health - battleDamageMob();\r\n          setCurrentMob(newStateMob);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else {\r\n          if (newStatePlayer._speed === newStateMob._speed) {\r\n            let battleDamageMob = () => {\r\n              if (\r\n                newStatePlayer._attack + newStatePlayer._special <=\r\n                newStateMob._defense\r\n              ) {\r\n                return 1;\r\n              } else if (\r\n                newStatePlayer._attack + newStatePlayer._special >\r\n                newStateMob._defense\r\n              ) {\r\n                return (\r\n                  newStatePlayer._attack +\r\n                  newStatePlayer._special -\r\n                  newStateMob._defense\r\n                );\r\n              }\r\n            };\r\n            let battleDamagePlayer = () => {\r\n              if (newStateMob._attack <= newStatePlayer._defense) {\r\n                return 1;\r\n              } else if (newStateMob._attack > newStatePlayer._defense) {\r\n                return newStateMob._attack - newStatePlayer._defense;\r\n              }\r\n            };\r\n            newStateMob._health = newStateMob._health - battleDamageMob();\r\n            setCurrentMob(newStateMob);\r\n            setDamageTaken(battleDamagePlayer());\r\n            setDamageTakenM(battleDamageMob());\r\n            setSpecialAttack(0);\r\n            newStatePlayer._health =\r\n              newStatePlayer._health - battleDamagePlayer();\r\n            setCurrentPlayer(newStatePlayer);\r\n          }\r\n        }\r\n      }\r\n    } else if (currentBoss) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateBoss = { ...currentBoss };\r\n      if (newStatePlayer._health - newStateBoss._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (\r\n        newStateBoss._health -\r\n          (newStatePlayer._attack + newStatePlayer._special) <=\r\n        0\r\n      ) {\r\n        newStateBoss._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentBoss(newStateBoss);\r\n        setCurrentPlayer(newStatePlayer);\r\n        setSpecialAttack(0);\r\n      } else {\r\n        if (newStatePlayer._speed > newStateBoss._speed) {\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateBoss._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateBoss._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateBoss._defense\r\n              );\r\n            }\r\n          };\r\n          let battleDamagePlayer = () => {\r\n            if (newStateBoss._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n              return newStateBoss._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n          setCurrentBoss(newStateBoss);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else if (newStateBoss._speed > newStatePlayer._speed) {\r\n          let battleDamagePlayer = () => {\r\n            if (newStateBoss._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n              return newStateBoss._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateBoss._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateBoss._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateBoss._defense\r\n              );\r\n            }\r\n          };\r\n          newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n          setCurrentBoss(newStateBoss);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else {\r\n          if (newStatePlayer._speed === newStateBoss._speed) {\r\n            let battleDamageMob = () => {\r\n              if (\r\n                newStatePlayer._attack + newStatePlayer._special <=\r\n                newStateBoss._defense\r\n              ) {\r\n                return 1;\r\n              } else if (\r\n                newStatePlayer._attack + newStatePlayer._special >\r\n                newStateBoss._defense\r\n              ) {\r\n                return (\r\n                  newStatePlayer._attack +\r\n                  newStatePlayer._special -\r\n                  newStateBoss._defense\r\n                );\r\n              }\r\n            };\r\n            let battleDamagePlayer = () => {\r\n              if (newStateBoss._attack <= newStatePlayer._defense) {\r\n                return 1;\r\n              } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n                return newStateBoss._attack - newStatePlayer._defense;\r\n              }\r\n            };\r\n            newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n            setCurrentBoss(newStateBoss);\r\n            setDamageTaken(battleDamagePlayer());\r\n            setDamageTakenM(battleDamageMob());\r\n            setSpecialAttack(0);\r\n            newStatePlayer._health =\r\n              newStatePlayer._health - battleDamagePlayer();\r\n            setCurrentPlayer(newStatePlayer);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n   //Special Attack\r\n   const specialAttack2 = () => {\r\n    if (currentMob) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateMob = { ...currentMob };\r\n      if (\r\n        newStatePlayer._health +\r\n          newStatePlayer._defense -\r\n          newStateMob._attack <=\r\n        0\r\n      ) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (\r\n        newStateMob._health +\r\n          newStateMob._defense -\r\n          (newStatePlayer._attack + newStatePlayer._special) <=\r\n        0\r\n      ) {\r\n        newStateMob._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentMob(newStateMob);\r\n        setCurrentPlayer(newStatePlayer);\r\n        setSpecialAttack(0);\r\n      } else {\r\n        if (newStatePlayer._speed > newStateMob._speed) {\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateMob._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateMob._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateMob._defense\r\n              );\r\n            }\r\n          };\r\n          let battleDamagePlayer = () => {\r\n            if (newStateMob._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateMob._attack > newStatePlayer._defense) {\r\n              return newStateMob._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          newStateMob._health = newStateMob._health - battleDamageMob();\r\n          setCurrentMob(newStateMob);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else if (newStateMob._speed > newStatePlayer._speed) {\r\n          let battleDamagePlayer = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStatePlayer._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStatePlayer._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStatePlayer._defense\r\n              );\r\n            }\r\n          };\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateMob._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateMob._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateMob._defense\r\n              );\r\n            }\r\n          };\r\n          newStateMob._health = newStateMob._health - battleDamageMob();\r\n          setCurrentMob(newStateMob);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else {\r\n          if (newStatePlayer._speed === newStateMob._speed) {\r\n            let battleDamageMob = () => {\r\n              if (\r\n                newStatePlayer._attack + newStatePlayer._special <=\r\n                newStateMob._defense\r\n              ) {\r\n                return 1;\r\n              } else if (\r\n                newStatePlayer._attack + newStatePlayer._special >\r\n                newStateMob._defense\r\n              ) {\r\n                return (\r\n                  newStatePlayer._attack +\r\n                  newStatePlayer._special -\r\n                  newStateMob._defense\r\n                );\r\n              }\r\n            };\r\n            let battleDamagePlayer = () => {\r\n              if (newStateMob._attack <= newStatePlayer._defense) {\r\n                return 1;\r\n              } else if (newStateMob._attack > newStatePlayer._defense) {\r\n                return newStateMob._attack - newStatePlayer._defense;\r\n              }\r\n            };\r\n            newStateMob._health = newStateMob._health - battleDamageMob();\r\n            setCurrentMob(newStateMob);\r\n            setDamageTaken(battleDamagePlayer());\r\n            setDamageTakenM(battleDamageMob());\r\n            setSpecialAttack(0);\r\n            newStatePlayer._health =\r\n              newStatePlayer._health - battleDamagePlayer();\r\n            setCurrentPlayer(newStatePlayer);\r\n          }\r\n        }\r\n      }\r\n    } else if (currentBoss) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateBoss = { ...currentBoss };\r\n      if (newStatePlayer._health - newStateBoss._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (\r\n        newStateBoss._health -\r\n          (newStatePlayer._attack + newStatePlayer._special) <=\r\n        0\r\n      ) {\r\n        newStateBoss._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentBoss(newStateBoss);\r\n        setCurrentPlayer(newStatePlayer);\r\n        setSpecialAttack(0);\r\n      } else {\r\n        if (newStatePlayer._speed > newStateBoss._speed) {\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateBoss._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateBoss._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateBoss._defense\r\n              );\r\n            }\r\n          };\r\n          let battleDamagePlayer = () => {\r\n            if (newStateBoss._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n              return newStateBoss._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n          setCurrentBoss(newStateBoss);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else if (newStateBoss._speed > newStatePlayer._speed) {\r\n          let battleDamagePlayer = () => {\r\n            if (newStateBoss._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n              return newStateBoss._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateBoss._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateBoss._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateBoss._defense\r\n              );\r\n            }\r\n          };\r\n          newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n          setCurrentBoss(newStateBoss);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else {\r\n          if (newStatePlayer._speed === newStateBoss._speed) {\r\n            let battleDamageMob = () => {\r\n              if (\r\n                newStatePlayer._attack + newStatePlayer._special <=\r\n                newStateBoss._defense\r\n              ) {\r\n                return 1;\r\n              } else if (\r\n                newStatePlayer._attack + newStatePlayer._special >\r\n                newStateBoss._defense\r\n              ) {\r\n                return (\r\n                  newStatePlayer._attack +\r\n                  newStatePlayer._special -\r\n                  newStateBoss._defense\r\n                );\r\n              }\r\n            };\r\n            let battleDamagePlayer = () => {\r\n              if (newStateBoss._attack <= newStatePlayer._defense) {\r\n                return 1;\r\n              } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n                return newStateBoss._attack - newStatePlayer._defense;\r\n              }\r\n            };\r\n            newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n            setCurrentBoss(newStateBoss);\r\n            setDamageTaken(battleDamagePlayer());\r\n            setDamageTakenM(battleDamageMob());\r\n            setSpecialAttack(0);\r\n            newStatePlayer._health =\r\n              newStatePlayer._health - battleDamagePlayer();\r\n            setCurrentPlayer(newStatePlayer);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n   //Special Attack\r\n   const specialAttack3 = () => {\r\n    if (currentMob) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateMob = { ...currentMob };\r\n      if (\r\n        newStatePlayer._health +\r\n          newStatePlayer._defense -\r\n          newStateMob._attack <=\r\n        0\r\n      ) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (\r\n        newStateMob._health +\r\n          newStateMob._defense -\r\n          (newStatePlayer._attack + newStatePlayer._special) <=\r\n        0\r\n      ) {\r\n        newStateMob._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentMob(newStateMob);\r\n        setCurrentPlayer(newStatePlayer);\r\n        setSpecialAttack(0);\r\n      } else {\r\n        if (newStatePlayer._speed > newStateMob._speed) {\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateMob._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateMob._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateMob._defense\r\n              );\r\n            }\r\n          };\r\n          let battleDamagePlayer = () => {\r\n            if (newStateMob._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateMob._attack > newStatePlayer._defense) {\r\n              return newStateMob._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          newStateMob._health = newStateMob._health - battleDamageMob();\r\n          setCurrentMob(newStateMob);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else if (newStateMob._speed > newStatePlayer._speed) {\r\n          let battleDamagePlayer = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStatePlayer._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStatePlayer._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStatePlayer._defense\r\n              );\r\n            }\r\n          };\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateMob._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateMob._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateMob._defense\r\n              );\r\n            }\r\n          };\r\n          newStateMob._health = newStateMob._health - battleDamageMob();\r\n          setCurrentMob(newStateMob);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else {\r\n          if (newStatePlayer._speed === newStateMob._speed) {\r\n            let battleDamageMob = () => {\r\n              if (\r\n                newStatePlayer._attack + newStatePlayer._special <=\r\n                newStateMob._defense\r\n              ) {\r\n                return 1;\r\n              } else if (\r\n                newStatePlayer._attack + newStatePlayer._special >\r\n                newStateMob._defense\r\n              ) {\r\n                return (\r\n                  newStatePlayer._attack +\r\n                  newStatePlayer._special -\r\n                  newStateMob._defense\r\n                );\r\n              }\r\n            };\r\n            let battleDamagePlayer = () => {\r\n              if (newStateMob._attack <= newStatePlayer._defense) {\r\n                return 1;\r\n              } else if (newStateMob._attack > newStatePlayer._defense) {\r\n                return newStateMob._attack - newStatePlayer._defense;\r\n              }\r\n            };\r\n            newStateMob._health = newStateMob._health - battleDamageMob();\r\n            setCurrentMob(newStateMob);\r\n            setDamageTaken(battleDamagePlayer());\r\n            setDamageTakenM(battleDamageMob());\r\n            setSpecialAttack(0);\r\n            newStatePlayer._health =\r\n              newStatePlayer._health - battleDamagePlayer();\r\n            setCurrentPlayer(newStatePlayer);\r\n          }\r\n        }\r\n      }\r\n    } else if (currentBoss) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateBoss = { ...currentBoss };\r\n      if (newStatePlayer._health - newStateBoss._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (\r\n        newStateBoss._health -\r\n          (newStatePlayer._attack + newStatePlayer._special) <=\r\n        0\r\n      ) {\r\n        newStateBoss._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentBoss(newStateBoss);\r\n        setCurrentPlayer(newStatePlayer);\r\n        setSpecialAttack(0);\r\n      } else {\r\n        if (newStatePlayer._speed > newStateBoss._speed) {\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateBoss._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateBoss._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateBoss._defense\r\n              );\r\n            }\r\n          };\r\n          let battleDamagePlayer = () => {\r\n            if (newStateBoss._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n              return newStateBoss._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n          setCurrentBoss(newStateBoss);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else if (newStateBoss._speed > newStatePlayer._speed) {\r\n          let battleDamagePlayer = () => {\r\n            if (newStateBoss._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n              return newStateBoss._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          let battleDamageMob = () => {\r\n            if (\r\n              newStatePlayer._attack + newStatePlayer._special <=\r\n              newStateBoss._defense\r\n            ) {\r\n              return 1;\r\n            } else if (\r\n              newStatePlayer._attack + newStatePlayer._special >\r\n              newStateBoss._defense\r\n            ) {\r\n              return (\r\n                newStatePlayer._attack +\r\n                newStatePlayer._special -\r\n                newStateBoss._defense\r\n              );\r\n            }\r\n          };\r\n          newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n          setCurrentBoss(newStateBoss);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          setSpecialAttack(0);\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else {\r\n          if (newStatePlayer._speed === newStateBoss._speed) {\r\n            let battleDamageMob = () => {\r\n              if (\r\n                newStatePlayer._attack + newStatePlayer._special <=\r\n                newStateBoss._defense\r\n              ) {\r\n                return 1;\r\n              } else if (\r\n                newStatePlayer._attack + newStatePlayer._special >\r\n                newStateBoss._defense\r\n              ) {\r\n                return (\r\n                  newStatePlayer._attack +\r\n                  newStatePlayer._special -\r\n                  newStateBoss._defense\r\n                );\r\n              }\r\n            };\r\n            let battleDamagePlayer = () => {\r\n              if (newStateBoss._attack <= newStatePlayer._defense) {\r\n                return 1;\r\n              } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n                return newStateBoss._attack - newStatePlayer._defense;\r\n              }\r\n            };\r\n            newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n            setCurrentBoss(newStateBoss);\r\n            setDamageTaken(battleDamagePlayer());\r\n            setDamageTakenM(battleDamageMob());\r\n            setSpecialAttack(0);\r\n            newStatePlayer._health =\r\n              newStatePlayer._health - battleDamagePlayer();\r\n            setCurrentPlayer(newStatePlayer);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // Player Attack\r\n  const Attack = () => {\r\n    if (currentMob) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateMob = { ...currentMob };\r\n      if (\r\n        newStatePlayer._health +\r\n          newStatePlayer._defense -\r\n          newStateMob._attack <=\r\n        0\r\n      ) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (\r\n        newStateMob._health + newStateMob._defense - newStatePlayer._attack <=\r\n        0\r\n      ) {\r\n        newStateMob._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        newStatePlayer._exp = newStatePlayer._exp + newStateMob._exp;\r\n        setCurrentMob(newStateMob);\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        if (newStatePlayer._speed > newStateMob._speed) {\r\n          let battleDamageMob = () => {\r\n            if (newStatePlayer._attack <= newStateMob._defense) {\r\n              return 1;\r\n            } else if (newStatePlayer._attack > newStateMob._defense) {\r\n              return newStatePlayer._attack - newStateMob._defense;\r\n            }\r\n          };\r\n          let battleDamagePlayer = () => {\r\n            if (newStateMob._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateMob._attack > newStatePlayer._defense) {\r\n              return newStateMob._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          newStateMob._health = newStateMob._health - battleDamageMob();\r\n          setCurrentMob(newStateMob);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else if (newStateMob._speed > newStatePlayer._speed) {\r\n          let battleDamagePlayer = () => {\r\n            if (newStateMob._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateMob._attack > newStatePlayer._defense) {\r\n              return newStateMob._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          let battleDamageMob = () => {\r\n            if (newStatePlayer._attack <= newStateMob._defense) {\r\n              return 1;\r\n            } else if (newStatePlayer._attack > newStateMob._defense) {\r\n              return newStatePlayer._attack - newStateMob._defense;\r\n            }\r\n          };\r\n          newStateMob._health = newStateMob._health - battleDamageMob();\r\n          setCurrentMob(newStateMob);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else {\r\n          if (newStatePlayer._speed === newStateMob._speed) {\r\n            let battleDamageMob = () => {\r\n              if (newStatePlayer._attack <= newStateMob._defense) {\r\n                return 1;\r\n              } else if (newStatePlayer._attack > newStateMob._defense) {\r\n                return newStatePlayer._attack - newStateMob._defense;\r\n              }\r\n            };\r\n            let battleDamagePlayer = () => {\r\n              if (newStateMob._attack <= newStatePlayer._defense) {\r\n                return 1;\r\n              } else if (newStateMob._attack > newStatePlayer._defense) {\r\n                return newStateMob._attack - newStatePlayer._defense;\r\n              }\r\n            };\r\n            newStateMob._health = newStateMob._health - battleDamageMob();\r\n            setCurrentMob(newStateMob);\r\n            setDamageTaken(battleDamagePlayer());\r\n            setDamageTakenM(battleDamageMob());\r\n            newStatePlayer._health =\r\n              newStatePlayer._health - battleDamagePlayer();\r\n            setCurrentPlayer(newStatePlayer);\r\n          }\r\n        }\r\n      }\r\n    } else if (currentBoss) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateBoss = { ...currentBoss };\r\n      if (newStatePlayer._health - newStateBoss._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (newStateBoss._health - newStatePlayer._attack <= 0) {\r\n        newStateBoss._health = 0;\r\n        newStatePlayer._exp = newStatePlayer._exp + newStateBoss._exp;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentBoss(newStateBoss);\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        if (newStatePlayer._speed > newStateBoss._speed) {\r\n          let battleDamageMob = () => {\r\n            if (newStatePlayer._attack <= newStateBoss._defense) {\r\n              return 1;\r\n            } else if (newStatePlayer._attack > newStateBoss._defense) {\r\n              return newStatePlayer._attack - newStateBoss._defense;\r\n            }\r\n          };\r\n          let battleDamagePlayer = () => {\r\n            if (newStateBoss._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n              return newStateBoss._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n          setCurrentBoss(newStateBoss);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else if (newStateBoss._speed > newStatePlayer._speed) {\r\n          let battleDamagePlayer = () => {\r\n            if (newStateBoss._attack <= newStatePlayer._defense) {\r\n              return 1;\r\n            } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n              return newStateBoss._attack - newStatePlayer._defense;\r\n            }\r\n          };\r\n          let battleDamageMob = () => {\r\n            if (newStatePlayer._attack <= newStateBoss._defense) {\r\n              return 1;\r\n            } else if (newStatePlayer._attack > newStateBoss._defense) {\r\n              return newStatePlayer._attack - newStateBoss._defense;\r\n            }\r\n          };\r\n          newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n          setCurrentBoss(newStateBoss);\r\n          setDamageTaken(battleDamagePlayer());\r\n          setDamageTakenM(battleDamageMob());\r\n          newStatePlayer._health =\r\n            newStatePlayer._health - battleDamagePlayer();\r\n          setCurrentPlayer(newStatePlayer);\r\n        } else {\r\n          if (newStatePlayer._speed === newStateBoss._speed) {\r\n            let battleDamageMob = () => {\r\n              if (newStatePlayer._attack <= newStateBoss._defense) {\r\n                return 1;\r\n              } else if (newStatePlayer._attack > newStateBoss._defense) {\r\n                return newStatePlayer._attack - newStateBoss._defense;\r\n              }\r\n            };\r\n            let battleDamagePlayer = () => {\r\n              if (newStateBoss._attack <= newStatePlayer._defense) {\r\n                return 1;\r\n              } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n                return newStateBoss._attack - newStatePlayer._defense;\r\n              }\r\n            };\r\n            newStateBoss._health = newStateBoss._health - battleDamageMob();\r\n            setCurrentBoss(newStateBoss);\r\n            setDamageTaken(battleDamagePlayer());\r\n            setDamageTakenM(battleDamageMob());\r\n            newStatePlayer._health =\r\n              newStatePlayer._health - battleDamagePlayer();\r\n            setCurrentPlayer(newStatePlayer);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  //Quit\r\n  const quit = () => {\r\n    changePage(\"Home\");\r\n    setCurrentPlayer(\"\");\r\n    setScore(1);\r\n    setSpecialAttack(0);\r\n    setBossChoice(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const a = () => {\r\n      setLoading(true);\r\n      if (!currentMob && !currentBoss) {\r\n        if (score % 5 === 0) {\r\n          setCurrentBoss(bossList[bossChoice]);\r\n        } else {\r\n          if (score > 5 && score < 10) {\r\n            setCurrentMob(mobList[enemyChoice]);\r\n          }\r\n          setCurrentMob(mobList[enemyChoice]);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    a();\r\n  }, [score, enemyChoice]);\r\n\r\n  useEffect(() => {\r\n    if (score % 5 === 0) {\r\n      if (currentMob && currentBoss) {\r\n        setCurrentBoss(bossList[bossChoice]);\r\n      }\r\n    }\r\n  }, [score, bossChoice]);\r\n\r\n  useEffect(() => {\r\n    if ((currentMob && currentMob._health) <= 0) {\r\n      setScore(score + 1);\r\n    } else if ((currentBoss && currentBoss._health) <= 0) {\r\n      setScore(score + 1);\r\n      setBossChoice(bossChoice + 1);\r\n    }\r\n  }, [currentMob, currentBoss]);\r\n\r\n  if (loading) {\r\n    return <h1 style={{ color: \"bisque\" }}> ...</h1>;\r\n  } else\r\n    return (\r\n      <div className=\"Game_Page\">\r\n        <h1>Clear The Krypt</h1>\r\n        <div className=\"Player_Area\">\r\n          <div className=\"Player\">\r\n            <div>\r\n              <h4>{currentPlayer._classType}</h4>\r\n            </div>\r\n            <div className=\"Player_Stats\">\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Hp: {currentPlayer._health} / {currentPlayer._maxHealth}\r\n                </h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Mp: {currentPlayer._mana} / {currentPlayer._maxMana}\r\n                </h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Lvl: {currentPlayer._level}\r\n                </h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>Coins: {currentPlayer._coin} </h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"Current_Player\">\r\n              <img src={currentPlayer._img} alt=\"\" />\r\n              \r\n            </div>\r\n            {(currentMob && currentMob._health) ||\r\n            (currentBoss && currentBoss._health) > 0 ||\r\n            score === 31 ? (\r\n              \" \"\r\n            ) : (\r\n              <div className=\"Shop_Button \" onClick={() => changePage(\"Shop\")}>\r\n                <div className=\"exp\"> <h3>Exp : {currentPlayer._exp}</h3></div>\r\n                <h4>Shop</h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"Mob\">\r\n            <div>\r\n              <h4>\r\n                {\" \"}\r\n                {(currentMob && currentMob._mobType) ||\r\n                  (currentBoss && currentBoss._bossType)}{\" \"}\r\n              </h4>\r\n            </div>\r\n            <div className=\"Mob_Stats\">\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Hp:{\" \"}\r\n                  {(currentMob && currentMob._health) ||\r\n                    (currentBoss && currentBoss._health)}\r\n                  / {\"\"}\r\n                  {(currentMob && currentMob._maxHealth) ||\r\n                    (currentBoss && currentBoss._maxHealth)}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"Current_Player\">\r\n              <img\r\n                src={\r\n                  (currentMob && currentMob._img) ||\r\n                  (currentBoss && currentBoss._img)\r\n                }\r\n                alt=\"\"\r\n              />\r\n              \r\n            </div>\r\n            {(currentMob && currentMob._health) ||\r\n            (currentBoss && currentBoss._health) > 0 ||\r\n            score === 31 ? (\r\n              \" \"\r\n            ) : (\r\n              <div\r\n                className=\"NextBattle_Button\"\r\n                onClick={() => {\r\n                  nextButtonHandler();\r\n                }}\r\n              > <div className=\"exp\"> <h3>Exp Gained: {\" \"} {(currentMob && currentMob._exp) ||\r\n                (currentBoss && currentBoss._exp)} </h3></div>\r\n                <h4>Next Battle</h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"Game_Events\">\r\n          {(currentMob && currentMob._health === 0) ||\r\n          (currentBoss && currentBoss._health === 0) ||\r\n          (currentPlayer && currentPlayer._health === 0) ? (\r\n            \" \"\r\n          ) : (\r\n            <h3>\r\n              {currentPlayer._classType} lost {damageTake} Hp from{\" \"}\r\n              {(currentMob && currentMob._mobType) ||\r\n                (currentBoss && currentBoss._bossType)}{\" \"}\r\n              &{\" \"}\r\n            </h3>\r\n          )}\r\n          {(currentMob && currentMob._health === 0) ||\r\n          (currentBoss && currentBoss._health === 0) ||\r\n          (currentPlayer && currentPlayer._health) === 0 ? (\r\n            \" \"\r\n          ) : (\r\n            <h3>\r\n              {(currentMob && currentMob._mobType) ||\r\n                (currentBoss && currentBoss._bossType)}{\" \"}\r\n              Lost {damageTakeM} Hp\r\n            </h3>\r\n          )}\r\n          {(currentMob && currentMob._health === 0) ||\r\n          (currentBoss && currentBoss._health === 0) ? (\r\n            <h3>\r\n              {(currentMob && currentMob._mobType) ||\r\n                (currentBoss && currentBoss._bossType)}{\" \"}\r\n              Defeated{\" \"}\r\n            </h3>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n          {score === 31 ? <h3>You Cleared The Krypt</h3> : \" \"}\r\n          {(currentPlayer && currentPlayer._health) > 0 ? (\r\n            \" \"\r\n          ) : (\r\n            <h3>\r\n              {\" \"}\r\n              You Were Defeated By{\" \"}\r\n              {(currentMob && currentMob._mobType) ||\r\n                (currentBoss && currentBoss._bossType)}\r\n            </h3>\r\n          )}\r\n        </div>\r\n        <div className=\"Action_Containers\">\r\n          {(currentMob && currentMob._health === 0) ||\r\n          currentPlayer._health === 0 ||\r\n          (currentBoss && currentBoss._health === 0) ? (\r\n            \" \"\r\n          ) : (\r\n            <>\r\n              {currentMob && currentMob._mobType ? (\r\n                <div className=\"Attack_Button\" onClick={() => Attack()}>\r\n                  <h2>Attack</h2>\r\n                </div>\r\n              ) : (\r\n                <div className=\"Attack_Button\" onClick={() => Attack()}>\r\n                  <h2>Attack</h2>\r\n                </div>\r\n              )}\r\n              <div className=\"Defend_Button\" onClick={() => defend()}>\r\n                <h2>Defend/Dodge</h2>\r\n              </div>\r\n                {currentPlayer._classType === \"Mage\" ? (<div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() => specialAttack()}\r\n                  \r\n                ><h2>Crystalize</h2>\r\n                <h3>5 Mana</h3> </div> ):(\"\")}\r\n                {currentPlayer._classType === \"Mage\" ? (<div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() => specialAttack()}\r\n                  \r\n                ><h2>Black Hole</h2>\r\n                <h3>10 Mana</h3> </div> ):(\"\")}\r\n                {currentPlayer._classType === \"Mage\" ? (<div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() => specialAttack2()}\r\n                  \r\n                ><h2>Implosion</h2> <h3>15 Mana</h3> </div> ):(\"\")}\r\n                {currentPlayer._classType === \"Knight\" ? (<div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() => specialAttack3()}\r\n                  \r\n                ><h2>Impact</h2>\r\n                <h4>5 Mana</h4>  </div> ):(\"\")}\r\n                {currentPlayer._classType === \"Knight\" ? (<div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() => specialAttack()}\r\n                  \r\n                ><h2>Gillotine</h2>\r\n                <h4>10 Mana</h4> </div> ):(\"\")}\r\n                {currentPlayer._classType === \"Knight\" ? (<div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() => specialAttack()}\r\n                  \r\n                ><h2>Dismemberment</h2>\r\n                <h4>15 Mana</h4>  </div> ):(\"\")}\r\n                {currentPlayer._classType === \"Rouge\" ? (<div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() => specialAttack()}\r\n                  \r\n                ><h2>Back Stab</h2>\r\n                <h3>5 Mana</h3> </div> ):(\"\")}\r\n                {currentPlayer._classType === \"Rouge\" ? (<div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() => specialAttack()}\r\n                  \r\n                ><h2>Double Stab</h2>\r\n                <h3>10 Mana</h3> </div> ):(\"\")}\r\n                {currentPlayer._classType === \"Rouge\" ? (<div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() => specialAttack()}\r\n                  \r\n                ><h2>Assassinate</h2> <h3>15 Mana</h3></div> ):(\"\")}\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"Back_Button\" onClick={() => quit()}>\r\n          <h2>Quit Game</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/Mage.ad1c480e.gif\";","export default __webpack_public_path__ + \"static/media/Rouge.f49a7755.gif\";","export default __webpack_public_path__ + \"static/media/Knight.bbb32b24.gif\";","import Mage from \"../Assets/Mage.gif\";\r\nimport Rouge from \"../Assets/Rouge.gif\";\r\nimport Knight from \"../Assets/Knight.gif\";\r\n\r\nconst Class = ({ changePage, resetPlayer, currentPlayer }) => {\r\n  return (\r\n    <div className=\"ClassPage\">\r\n      <h1>Choose Your Class</h1>\r\n      <div className=\"Player_Container\">\r\n        {/* MAGE */}\r\n        <div className=\"Mage\">\r\n          <img className=\"Mage_Img\" src={Mage} alt=\"Mage Gif\" />\r\n          <div\r\n            className={` ${\r\n              currentPlayer && currentPlayer._classType === \"Mage\"\r\n                ? \"Clicked\"\r\n                : \" \"\r\n            } Character_Button `}\r\n          >\r\n            <h2 onClick={() => resetPlayer(\"Mage\")}>The Mage</h2>\r\n          </div>\r\n        </div>\r\n        {/* ROUGE */}\r\n        <div className=\"Rouge\">\r\n          <img className=\"Rouge_Img\" src={Rouge} alt=\"Rouge Gif\" />\r\n          <div\r\n            className={` ${\r\n              currentPlayer && currentPlayer._classType === \"Rouge\"\r\n                ? \"Clicked\"\r\n                : \" \"\r\n            } Character_Button `}\r\n          >\r\n            <h2 onClick={() => resetPlayer(\"Rouge\")}>The Rouge</h2>\r\n          </div>\r\n        </div>\r\n        {/* KNIGHT */}\r\n        <div className=\"Knight\">\r\n          <img className=\"Knight_Img\" src={Knight} alt=\"Knight Gif\" />\r\n\r\n          <div\r\n            className={` ${\r\n              currentPlayer && currentPlayer._classType === \"Knight\"\r\n                ? \"Clicked\"\r\n                : \" \"\r\n            } Character_Button `}\r\n          >\r\n            <h2 onClick={() => resetPlayer(\"Knight\")}>The Knight</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"Button_Container\">\r\n        {/* Start Button */}\r\n        {currentPlayer && (\r\n          <div className=\"Start_Game\" onClick={() => changePage(\"Game\")}>\r\n            <h2>Start Game</h2>\r\n          </div>\r\n        )}\r\n        {/* Back Button */}\r\n        <div className=\"Back_Button\" onClick={() => changePage(\"Home\")}>\r\n          <h2>Back</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Class;\r\n","export default __webpack_public_path__ + \"static/media/ShopKeeper.66f6a091.gif\";","import ShopKeeper from \"../Assets/ShopKeeper.gif\";\r\n\r\nconst Shop = ({\r\n  changePage,\r\n  currentPlayer,\r\n  setCurrentPlayer,\r\n  setScore,\r\n  specialAttackCount,\r\n  setSpecialAttack,\r\n  setBossChoice,\r\n}) => {\r\n  //Quit\r\n  const quit = () => {\r\n    changePage(\"Home\");\r\n    setCurrentPlayer(\"\");\r\n    setBossChoice(0)\r\n    setScore(1);\r\n  };\r\n  //Buy Potion\r\n  const buyPotion = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._health = newStatePlayer._maxHealth\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Special Attack\r\n  const buySpecialAttack = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 10) {\r\n      newStatePlayer._coin -= 10;\r\n      setSpecialAttack(specialAttackCount + 1);\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Attack Boost\r\n  const buyAttackBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._attack += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Defense Boost\r\n  const buyDefenseBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._defense += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Speed Boost\r\n  const buySpeedBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._speed += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Health boost\r\n  const buyHealthBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._maxHealth += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Special Boost\r\n  const buySpecialBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._special += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Shop_Page\">\r\n      <div className=\"Shop_Area\">\r\n        <div className=\"Player\">\r\n          <div className=\"Player_Stats\">\r\n            <div className=\"Stats\">\r\n              <h4>Hp: {currentPlayer._health}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Atk: {currentPlayer._attack}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Def: {currentPlayer._defense}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Spd: {currentPlayer._speed}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Coins: {currentPlayer._coin} </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"Current_Player\">\r\n            <img src={currentPlayer._img} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"Shop_Items\">\r\n          <div className=\"Item\" onClick={() => buyPotion()}>\r\n            <h3>Potion: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buySpecialAttack()}>\r\n            <h3>Special: 10 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buyHealthBoost()}>\r\n            <h3>Hp Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buyAttackBoost()}>\r\n            <h3>Atk Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buyDefenseBoost()}>\r\n            <h3>Def Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buySpeedBoost()}>\r\n            <h3>Spd Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buySpecialBoost()}>\r\n            <h3>Spl Boost: 5 Coin</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"Shop_Keeper\">\r\n          <h3>Hello Explorer, Coin for My Wares?</h3>\r\n          <img src={ShopKeeper} alt=\"Shop Keeper\" className=\"ShopeKeeper_Img\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"Button_Container\">\r\n        <div className=\"Back_Button\" onClick={() => changePage(\"Game\")}>\r\n          <h2>Back</h2>\r\n        </div>\r\n        <div className=\"Back_Button\" onClick={() => quit()}>\r\n          <h2>Quit Game</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","const HowToPlay = ({ changePage }) => {\r\n  return (\r\n    <div className=\"How_To_Play_Page\">\r\n      <h1>How To Play</h1>\r\n      <div className=\"Instructions_Container\">\r\n          <h2>Rules and Game Mechanics</h2>\r\n          <ul>\r\n              <li>Player starts with a choice of class which has unique stats and weapon.</li>\r\n              <li>The player then starts on the first floor of the Krypt and proceeds to fight enemys.</li>\r\n              <li>After each floor the player has a choice to enter a shop to heal or increase their power.</li>\r\n              <li>Purchasing items use coin which are earned from killing enemies.</li>\r\n              <li>Battles are conducted in waves. You fight enemeis one at a time. The higher speed goes first.</li>\r\n              <li>Player Loses the game if their hp falls to 0.</li>\r\n              <li>Player Wins if they defeat 1 of 3 final boss.</li>\r\n          </ul>\r\n          <h2>Menu Interaction</h2>\r\n          <ul>\r\n              <li>Start Game Button: Starts Game</li>\r\n              <li>Class selection Button: Mage, Rouge, and Warrior.</li>\r\n              <li>Attack, Defend, or Dodge Buttons : Defend is for warior and mage class while dodge is for rouge class.</li>\r\n              <li>Shop Interaction Buttons: For selecting items in a shop.</li>\r\n              <li>Continue to Next floor interaction</li>\r\n          </ul>\r\n      </div>\r\n      <div className=\"Back_Button\" onClick={() => changePage(\"Home\")}>\r\n        <h2>Back</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","import { useState } from \"react\";\r\nimport { Home, Class, Game, HowToPlay, Shop} from \"../Pages/\";\r\nimport Mage from \"../Assets/Mage.gif\";\r\nimport Rouge from \"../Assets/Rouge.gif\";\r\nimport Knight from \"../Assets/Knight.gif\";\r\nimport { player } from \"../Classes/Player\";\r\n\r\nfunction GameEnter() {\r\n  const [page, setPage] = useState(\"\");\r\n  const [currentPlayer, setCurrentPlayer] = useState();\r\n  const [score, setScore] = useState(1);\r\n  const [specialAttackCount, setSpecialAttack] = useState(1);\r\n  const [bossChoice, setBossChoice] = useState(0);\r\n\r\n  let Player;\r\n  const resetPlayer = (classType) => {\r\n    switch (classType) {\r\n      case \"Mage\":\r\n        Player = new player(classType, 35, 35, 8, 5, 3, 8, Mage, 0 , 1 , 15, 15, 0);\r\n        setCurrentPlayer(Player);\r\n        setSpecialAttack(1);\r\n        break;\r\n      case \"Rouge\":\r\n        Player = new player(classType, 30, 30, 7, 7, 5, 7, Rouge, 0, 1 ,10, 10, 0);\r\n        setCurrentPlayer(Player);\r\n        setSpecialAttack(1);\r\n        break;\r\n      case \"Knight\":\r\n        Player = new player(classType, 45, 45, 9, 3, 7, 9, Knight, 0, 1, 5, 5, 0);\r\n        setCurrentPlayer(Player);\r\n        setSpecialAttack(1);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const changePage = (str) => {\r\n    setPage(str);\r\n  };\r\n\r\n  const pageToShow = () => {\r\n    switch (page) {\r\n      case \"Class\":\r\n        return (\r\n          <Class\r\n            changePage={changePage}\r\n            resetPlayer={resetPlayer}\r\n            currentPlayer={currentPlayer}\r\n          />\r\n        );\r\n      case \"HowToPlay\":\r\n        return <HowToPlay changePage={changePage} />;\r\n      case \"Game\":\r\n        return (\r\n          <Game\r\n            changePage={changePage}\r\n            currentPlayer={currentPlayer}\r\n            setCurrentPlayer={setCurrentPlayer}\r\n            bossChoice={bossChoice}\r\n            setBossChoice={setBossChoice}\r\n            score={score}\r\n            setScore={setScore}\r\n            specialAttackCount={specialAttackCount}\r\n            setSpecialAttack={setSpecialAttack}\r\n          />\r\n        );\r\n      case \"Shop\":\r\n        return (\r\n          <Shop\r\n            changePage={changePage}\r\n            currentPlayer={currentPlayer}\r\n            setCurrentPlayer={setCurrentPlayer}\r\n            bossChoice={bossChoice}\r\n            setBossChoice={setBossChoice}\r\n            specialAttackCount={specialAttackCount}\r\n            setSpecialAttack={setSpecialAttack}\r\n          />\r\n        );\r\n      default:\r\n        return <Home changePage={changePage} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Game_Container\">\r\n      <div className=\"Game_Space\">{pageToShow()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameEnter;\r\n","import GameEnter from './components/GameEnter';\nimport \"./App.css\";\nfunction App() {\n\n\n\n  return (\n    <GameEnter />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}