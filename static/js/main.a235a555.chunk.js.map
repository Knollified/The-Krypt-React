{"version":3,"sources":["Assets/Skull.gif","Pages/Home.js","Classes/Mob.js","Classes/Boss.js","Classes/Player.js","Assets/Skeleton_Warrior.gif","Assets/Skeleton_Archer.gif","Assets/Skeleton_Lancer.gif","Assets/Skeleton_Warlock.gif","Assets/Skeleton_King.gif","Assets/Skeleton_Rider.gif","Assets/Skeleton_Dragon.gif","Assets/Skeleton_Heratic.gif","Assets/Skeleton_Collector.gif","Pages/Game.js","Assets/Mage.gif","Assets/Rouge.gif","Assets/Knight.gif","Pages/Class.js","Assets/ShopKeeper.gif","Pages/Shop.js","Pages/HowToPlay.js","components/GameEnter.js","App.js","reportWebVitals.js","index.js"],"names":["Home","changePage","className","src","Skull","alt","onClick","mob","mobType","health","attack","speed","defense","coin","img","_mobType","_health","_attack","_speed","_defense","_coin","_img","this","boss","bossType","_bossType","player","classType","maxHealth","special","_classType","_maxHealth","_special","number","console","log","Game","currentPlayer","setCurrentPlayer","score","setScore","specialAttackCount","setSpecialAttack","enemy1","Math","floor","random","Skeleton_Warrior","enemy2","Skeleton_Archer","enemy3","Skeleton_Lancer","enemy4","Skeleton_Warlock","boss1","Skeleton_Rider","boss2","Skeleton_Heratic","boss3","Skeleton_Collector","boss4","Skeleton_King","boss5","Skeleton_Dragon","useState","undefined","currentMob","setCurrentMob","currentBoss","setCurrentBoss","loading","setLoading","bossChoice","setBossChoice","damageTake","setDamageTaken","mobList","enemyChoice","bossList","Attack","playerDamage","mobDamage","newStatePlayer","newStateMob","battleDamageMob","battleDamagePlayer","newStateBoss","battleDamageBoss","useEffect","style","color","_BossType","newState","bossDamage","defend","specialAttack","Class","resetPlayer","Mage","Rouge","Knight","Shop","buyPotion","buySpecialAttack","buyHealthBoost","buyAttackBoost","buyDefenseBoost","buySpeedBoost","buySpecialBoost","ShopKeeper","HowToPlay","GameEnter","Player","page","setPage","str","pageToShow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a235a555.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Skull.d4a418e2.gif\";","import Skull from '../Assets/Skull.gif'\r\nconst Home = ({changePage}) => {\r\n    return (\r\n        <div>\r\n         <header>\r\n            <h1>Welcome To The Krypt Enter If You Dare!</h1>\r\n          </header>\r\n          <div className=\"Image_Container\">\r\n            <img className=\"Skull_img\" src= { Skull } alt=\"\" />\r\n          </div>\r\n          <div className=\"Buttons\">\r\n            <div className=\"Button_1\" onClick={()=>changePage('Class')}>\r\n              <h2>Enter The Krypt</h2>\r\n            </div>\r\n            <div className=\"Button_2\" onClick={()=>changePage('HowToPlay') }>\r\n              <h2>How To Play</h2>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      )\r\n}\r\n\r\nexport default Home","export class mob {\r\n    _mobType = \"\";\r\n    _health = 0;\r\n    _attack = 0;\r\n    _speed = 0;\r\n    _defense = 0;\r\n    _coin = 0;\r\n    _img = '';\r\n  \r\n    constructor(mobType, health, attack, speed, defense,coin, img) {\r\n    this._mobType = mobType;\r\n    this._health = health;\r\n    this._attack = attack;\r\n    this._speed = speed;\r\n    this._defense = defense;\r\n    this._coin = coin;\r\n    this._img = img;\r\n\r\n  }\r\n  start(){\r\n      return {\r\n        _mobType :this._mobType,\r\n        _health :this._health,\r\n        _attack :this._attack,\r\n        _speed :this._speed,\r\n        _defense :this._defense,\r\n        _img :this._img,\r\n        _coin :this._coin,\r\n\r\n\r\n      }\r\n  }\r\n  \r\n}\r\n","export class boss {\r\n    _bossType = \"\";\r\n    _health = 0;\r\n    _attack = 0;\r\n    _speed = 0;\r\n    _defense = 0;\r\n    _coin = 0;\r\n    _img = '';\r\n  \r\n    constructor(bossType, health, attack, speed, defense,coin, img) {\r\n    this._bossType = bossType;\r\n    this._health = health;\r\n    this._attack = attack;\r\n    this._speed = speed;\r\n    this._defense = defense;\r\n    this._coin = coin;\r\n    this._img = img;\r\n\r\n  }\r\n  start(){\r\n      return {\r\n        _mobType :this._bossType,\r\n        _health :this._health,\r\n        _attack :this._attack,\r\n        _speed :this._speed,\r\n        _defense :this._defense,\r\n        _img :this._img,\r\n        _coin :this._coin,\r\n\r\n\r\n      }\r\n  }\r\n}\r\n","export class player {\r\n  _classType = \"\";\r\n  _maxHealth = 0;\r\n  _health = 0;\r\n  _attack = 0;\r\n  _speed = 0;\r\n  _defense = 0;\r\n  _special = 0;\r\n  _img = \"\";\r\n  _coin = 0;\r\n\r\n  constructor(classType, health, maxHealth, attack, speed, defense, special, img, coin) {\r\n    this._classType = classType;\r\n    this._maxHealth = maxHealth;\r\n    this._health = health;\r\n    this._attack = attack;\r\n    this._speed = speed;\r\n    this._defense = defense;\r\n    this._special =special;\r\n    this._img = img;\r\n    this._coin = coin;\r\n  }\r\n  start() {\r\n    return {\r\n      classType: this._classType,\r\n      _health: this._health,\r\n      _maxHealth: this._maxHealth,\r\n      _attack: this._attack,\r\n      _speed: this._speed,\r\n      _defense: this._defense,\r\n      _special: this._special,\r\n      _img: this._img,\r\n      _coin: this._coin,\r\n    };\r\n  }\r\n  increaseLife(number) {\r\n    this._health = this._health + number;\r\n    console.log({\r\n      classType: this._classType,\r\n      _health: this._health,\r\n      _attack: this._attack,\r\n      _speed: this._speed,\r\n      _defense: this._defense,\r\n      _coin: this._coin,\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Skeleton_Warrior.f4013fea.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Archer.2e9e5bda.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Lancer.dfc99c4c.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Warlock.d8a35ab7.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_King.dc3218c1.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Rider.e893007b.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Dragon.ad09202b.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Heratic.fd7dc328.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Collector.d771cbab.gif\";","import { mob } from \"../Classes/Mob\";\r\nimport { boss } from \"../Classes/Boss\";\r\nimport { player } from \"../Classes/Player\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Skeleton_Warrior from \"../Assets/Skeleton_Warrior.gif\";\r\nimport Skeleton_Archer from \"../Assets/Skeleton_Archer.gif\";\r\nimport Skeleton_Lancer from \"../Assets/Skeleton_Lancer.gif\";\r\nimport Skeleton_Warlock from \"../Assets/Skeleton_Warlock.gif\";\r\nimport Skeleton_King from \"../Assets/Skeleton_King.gif\";\r\nimport Skeleton_Rider from \"../Assets/Skeleton_Rider.gif\";\r\nimport Skeleton_Dragon from \"../Assets/Skeleton_Dragon.gif\";\r\nimport Skeleton_Heratic from \"../Assets/Skeleton_Heratic.gif\";\r\nimport Skeleton_Collector from \"../Assets/Skeleton_Collector.gif\";\r\n\r\nconst Game = ({\r\n  changePage,\r\n  currentPlayer,\r\n  setCurrentPlayer,\r\n  score,\r\n  setScore,\r\n  specialAttackCount,\r\n  setSpecialAttack,\r\n}) => {\r\n  //Mobs\r\n  let enemy1 = new mob(\r\n    \"Skeleton Warrior\",\r\n    Math.floor(Math.random() * (20 - 10) + 10),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Warrior\r\n  );\r\n  let enemy2 = new mob(\r\n    \"Skeleton Archer\",\r\n    Math.floor(Math.random() * (20 - 10) + 10),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Archer\r\n  );\r\n  let enemy3 = new mob(\r\n    \"Skeleton Lancer\",\r\n    Math.floor(Math.random() * (20 - 10) + 10),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Lancer\r\n  );\r\n  let enemy4 = new mob(\r\n    \"Skeleton Warlock\",\r\n    Math.floor(Math.random() * (20 - 10) + 10),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Warlock\r\n  );\r\n  //Bosses\r\n  let boss1 = new boss(\r\n    \"Skeleton Rider\",\r\n    Math.floor(Math.random() * (35 - 20) + 20),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    20,\r\n    Skeleton_Rider\r\n  );\r\n  let boss2 = new boss(\r\n    \"Skeleton Heratic\",\r\n    Math.floor(Math.random() * (35 - 20) + 20),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    20,\r\n    Skeleton_Heratic\r\n  );\r\n  let boss3 = new boss(\r\n    \"Skeleton Collector\",\r\n    Math.floor(Math.random() * (35 - 20) + 20),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    20,\r\n    Skeleton_Collector\r\n  );\r\n  let boss4 = new boss(\r\n    \"Skeleton King\",\r\n    Math.floor(Math.random() * (40 - 25) + 25),\r\n    Math.floor(Math.random() * (12 - 8) + 8),\r\n    Math.floor(Math.random() * (12 - 8) + 8),\r\n    Math.floor(Math.random() * (12 - 8) + 8),\r\n    20,\r\n    Skeleton_King\r\n  );\r\n  let boss5 = new boss(\r\n    \"Skeleton Dragon\",\r\n    Math.floor(Math.random() * (45 - 30) + 30),\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    20,\r\n    Skeleton_Dragon\r\n  );\r\n\r\n  const [currentMob, setCurrentMob] = useState(undefined);\r\n  const [currentBoss, setCurrentBoss] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [bossChoice, setBossChoice] = useState(0);\r\n  const [damageTake,setDamageTaken] = useState(0)\r\n\r\n  let mobList = [enemy1, enemy2, enemy3, enemy4];\r\n  let enemyChoice = Math.floor(Math.random() * (4 - 0) + 0);\r\n  let bossList = [boss1, boss2, boss3, boss4, boss5];\r\n\r\n  const nextButtonHandler = () => {\r\n    if (score % 5 === 0) {\r\n      setCurrentMob(undefined);\r\n      setCurrentBoss(bossList[bossChoice]);\r\n    } else {\r\n      setCurrentBoss(undefined);\r\n      setCurrentMob(mobList[enemyChoice]);\r\n    }\r\n  };\r\n  // Player Defend\r\n  const defend = (mobDamage) => {\r\n    if (currentPlayer) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      if (newStatePlayer._health - mobDamage <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamagePlayer = (mobDamage) => {\r\n          if (mobDamage <= newStatePlayer._defense) {\r\n            return 0;\r\n          } else if (mobDamage > newStatePlayer._defense) {\r\n            return mobDamage - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStatePlayer._health =\r\n          newStatePlayer._health - battleDamagePlayer(mobDamage);\r\n        setCurrentPlayer(newStatePlayer);\r\n        setDamageTaken(battleDamagePlayer(mobDamage));\r\n      }\r\n    } else if (currentBoss) {\r\n      const newState = { ...currentBoss };\r\n      if (newState._health - mobDamage <= 0) {\r\n        newState._health = 0;\r\n        setCurrentPlayer(newState);\r\n      } else {\r\n        let battleDamagePlayer = (bossDamage) => {\r\n          if (bossDamage <= newState._defense) {\r\n            return 1;\r\n          } else if (bossDamage > newState._defense) {\r\n            return bossDamage - newState._defense;\r\n          }\r\n        };\r\n        newState._health = newState._health - battleDamagePlayer(mobDamage);\r\n        setCurrentPlayer(newState);\r\n        setDamageTaken(battleDamagePlayer(mobDamage));\r\n      }\r\n    }\r\n  };\r\n  //Special Attack\r\n  const specialAttack = (playerDamage, mobDamage) => {\r\n    if (currentMob) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateMob = { ...currentMob };\r\n      if (newStatePlayer._health - mobDamage <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (newStateMob._health - playerDamage <= 0) {\r\n        newStateMob._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentMob(newStateMob);\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamageMob = (playerDamage) => {\r\n          if (playerDamage <= newStateMob._defense) {\r\n            return 1;\r\n          } else if (playerDamage > newStateMob._defense) {\r\n            return playerDamage - newStateMob._defense;\r\n          }\r\n        };\r\n        let battleDamagePlayer = (mobDamage) => {\r\n          if (mobDamage <= newStatePlayer._defense) {\r\n            return 1;\r\n          } else if (mobDamage > newStatePlayer._defense) {\r\n            return mobDamage - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStatePlayer._health =\r\n          newStatePlayer._health - battleDamageMob(mobDamage);\r\n        setCurrentPlayer(newStatePlayer);\r\n        newStateMob._health =\r\n          newStateMob._health - battleDamagePlayer(playerDamage);\r\n        setCurrentMob(newStateMob);\r\n        setDamageTaken(battleDamagePlayer(mobDamage));\r\n      }\r\n    } else if (currentBoss) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateBoss = { ...currentBoss };\r\n      if (newStatePlayer._health - mobDamage <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (newStateBoss._health - playerDamage <= 0) {\r\n        newStateBoss._health = 0;\r\n        setCurrentBoss(newStateBoss);\r\n      } else {\r\n        let battleDamageBoss = (playerDamage) => {\r\n          if (playerDamage <= newStateBoss._defense) {\r\n            return 1;\r\n          } else if (playerDamage > newStateBoss._defense) {\r\n            return playerDamage - newStateBoss._defense;\r\n          }\r\n        };\r\n        let battleDamagePlayer = (mobDamage) => {\r\n          if (mobDamage <= newStatePlayer._defense) {\r\n            return 1;\r\n          } else if (mobDamage > newStatePlayer._defense) {\r\n            return mobDamage - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStateBoss._health =\r\n          newStateBoss._health - battleDamageBoss(playerDamage);\r\n        setCurrentBoss(newStateBoss);\r\n        newStatePlayer._health =\r\n          newStatePlayer._health - battleDamagePlayer(mobDamage);\r\n        setCurrentPlayer(newStatePlayer);\r\n        setDamageTaken(battleDamagePlayer(mobDamage));\r\n      }\r\n    }\r\n    setSpecialAttack(specialAttackCount - 1);\r\n  };\r\n\r\n  // Player Attack\r\n  const Attack = (playerDamage, mobDamage) => {\r\n    if (currentMob) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateMob = { ...currentMob };\r\n      if (newStatePlayer._health - mobDamage <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (newStateMob._health - playerDamage <= 0) {\r\n        newStateMob._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentMob(newStateMob);\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamageMob = (playerDamage) => {\r\n          if (playerDamage <= newStateMob._defense) {\r\n            return 1;\r\n          } else if (playerDamage > newStateMob._defense) {\r\n            return playerDamage - newStateMob._defense;\r\n          }\r\n        };\r\n        let battleDamagePlayer = (mobDamage) => {\r\n          if (mobDamage <= newStatePlayer._defense) {\r\n            return 1;\r\n          } else if (mobDamage > newStatePlayer._defense) {\r\n            return mobDamage - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStatePlayer._health =\r\n          newStatePlayer._health - battleDamageMob(mobDamage);\r\n        setCurrentPlayer(newStatePlayer);\r\n        setDamageTaken(battleDamageMob(mobDamage));\r\n        newStateMob._health =\r\n          newStateMob._health - battleDamagePlayer(playerDamage);\r\n        setCurrentMob(newStateMob);\r\n      }\r\n    } else if (currentBoss) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateBoss = { ...currentBoss };\r\n      if (newStatePlayer._health - mobDamage <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (newStateBoss._health - playerDamage <= 0) {\r\n        newStateBoss._health = 0;\r\n        setCurrentBoss(newStateBoss);\r\n      } else {\r\n        let battleDamageBoss = (playerDamage) => {\r\n          if (playerDamage <= newStateBoss._defense) {\r\n            return 1;\r\n          } else if (playerDamage > newStateBoss._defense) {\r\n            return playerDamage - newStateBoss._defense;\r\n          }\r\n        };\r\n        let battleDamagePlayer = (mobDamage) => {\r\n          if (mobDamage <= newStatePlayer._defense) {\r\n            return 1;\r\n          } else if (mobDamage > newStatePlayer._defense) {\r\n            return mobDamage - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStateBoss._health =\r\n          newStateBoss._health - battleDamageBoss(playerDamage);\r\n        setCurrentBoss(newStateBoss);\r\n        newStatePlayer._health =\r\n          newStatePlayer._health - battleDamagePlayer(mobDamage);\r\n        setCurrentPlayer(newStatePlayer);\r\n        setDamageTaken(battleDamagePlayer(mobDamage));\r\n      }\r\n    }\r\n  };\r\n  //Quit\r\n  const quit = () => {\r\n    changePage(\"Home\");\r\n    setCurrentPlayer(\"\");\r\n    setScore(0);\r\n    setSpecialAttack(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const a = () => {\r\n      setLoading(true);\r\n      if (!currentMob && !currentBoss) {\r\n        setCurrentMob(mobList[enemyChoice]);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    a();\r\n  }, [score, enemyChoice]);\r\n\r\n  useEffect(() => {\r\n    if (score % 5 === 0) {\r\n      if (currentMob && currentBoss) {\r\n        setCurrentBoss(bossList[bossChoice]);\r\n      }\r\n    }\r\n  }, [score]);\r\n\r\n  useEffect(() => {\r\n    if ((currentMob && currentMob._health) <= 0) {\r\n      setScore(score + 1);\r\n    } else if ((currentBoss && currentBoss._health) <= 0) {\r\n      setScore(score + 1);\r\n      setBossChoice(bossChoice + 0.5);\r\n    }\r\n  }, [currentMob, currentBoss]);\r\n\r\n  if (loading) {\r\n    return <h1 style={{ color: \"bisque\" }}> ...</h1>;\r\n  } else\r\n    return (\r\n      <div className=\"Game_Page\">\r\n        <h1>Clear The Krypt</h1>\r\n        <div className=\"Player_Area\">\r\n          <div className=\"Player\">\r\n            <div>\r\n              <h4>{currentPlayer._classType}</h4>\r\n            </div>\r\n            <div className=\"Player_Stats\">\r\n              <div className=\"Stats\">\r\n                <h4>Hp: {currentPlayer._health} / {currentPlayer._maxHealth}</h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>Atk: {currentPlayer._attack}</h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>Def: {currentPlayer._defense}</h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>Spd: {currentPlayer._speed}</h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>Coins: {currentPlayer._coin} </h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"Current_Player\">\r\n              <img src={currentPlayer._img} alt=\"\" />\r\n            </div>\r\n            {(currentMob && currentMob._health) ||\r\n            (currentBoss && currentBoss._health) > 0 ? (\r\n              \" \"\r\n            ) : (\r\n              <div className=\"Shop_Button \" onClick={() => changePage(\"Shop\")}>\r\n                <h4>Shop</h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"Mob\">\r\n            <div>\r\n              <h4>\r\n                {\" \"}\r\n                {(currentMob && currentMob._mobType) ||\r\n                  (currentBoss && currentBoss._bossType)}{\" \"}\r\n              </h4>\r\n            </div>\r\n            <div className=\"Mob_Stats\">\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Hp:{\" \"}\r\n                  {(currentMob && currentMob._health) ||\r\n                    (currentBoss && currentBoss._health)}\r\n                </h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Atk:{\" \"}\r\n                  {(currentMob && currentMob._attack) ||\r\n                    (currentBoss && currentBoss._attack)}\r\n                </h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Def:{\" \"}\r\n                  {(currentMob && currentMob._defense) ||\r\n                    (currentBoss && currentBoss._defense)}\r\n                </h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Spd:{\" \"}\r\n                  {(currentMob && currentMob._speed) ||\r\n                    (currentBoss && currentBoss._speed)}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"Current_Player\">\r\n              <img\r\n                src={\r\n                  (currentMob && currentMob._img) ||\r\n                  (currentBoss && currentBoss._img)\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            {(currentMob && currentMob._health) ||\r\n            (currentBoss && currentBoss._health) > 0 ? (\r\n              \" \"\r\n            ) : (\r\n              <div\r\n                className=\"NextBattle_Button\"\r\n                onClick={() => {\r\n                  nextButtonHandler();\r\n                }}\r\n              >\r\n                <h4>Next Battle</h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"Game_Events\">\r\n            {(currentMob && currentMob._health) === 0 || (currentPlayer && currentPlayer._health) === 0 ? (\" \") : (<h3>you lost {damageTake} Hp from {(currentMob && currentMob._mobType) || (currentBoss && currentBoss._bossType)}</h3>)}\r\n            {(currentMob && currentMob._health) === 0  ? (<h3>{(currentMob && currentMob._mobType) || (currentBoss && currentBoss._BossType)} Defeated</h3>) : (\" \")}\r\n            {(currentPlayer && currentPlayer._health) > 0 ? (\" \") : (<h3> You Were Defeated By {(currentMob && currentMob._mobType) || (currentBoss && currentBoss._bossType)}</h3>)}\r\n          </div>\r\n        <div className=\"Action_Containers\">\r\n          {(currentMob && currentMob._health === 0) ||\r\n          currentPlayer._health === 0 ? (\r\n            \" \"\r\n          ) : (\r\n            <>\r\n              {currentMob && currentMob._mobType ? ( <div\r\n                className=\"Attack_Button\"\r\n                onClick={() =>\r\n                  Attack(\r\n                    currentPlayer._attack,\r\n                    (currentMob._attack)\r\n                  )\r\n                }\r\n              >\r\n                <h2>Attack</h2>\r\n              </div>) : (<div\r\n                className=\"Attack_Button\"\r\n                onClick={() =>\r\n                  Attack(\r\n                    currentPlayer._attack,\r\n                    (currentBoss._attack)\r\n                  )\r\n                }\r\n              >\r\n                <h2>Attack</h2>\r\n              </div>)}\r\n              <div\r\n                className=\"Defend_Button\"\r\n                onClick={() =>\r\n                  defend(currentMob._attack || currentBoss._attack)\r\n                }\r\n              >\r\n                <h2>Defend/Dodge</h2>\r\n              </div>\r\n              {specialAttackCount < 1 ? (\r\n                \" \"\r\n              ) : (\r\n                <div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() =>\r\n                    specialAttack(\r\n                      currentPlayer._attack + currentPlayer._special,\r\n                      (currentMob && currentMob._attack) ||\r\n                        (currentBoss && currentBoss._attack)\r\n                    )\r\n                  }\r\n                >\r\n                  <h2>Special Attack</h2>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"Back_Button\" onClick={() => quit()}>\r\n          <h2>Quit Game</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/Mage.ad1c480e.gif\";","export default __webpack_public_path__ + \"static/media/Rouge.f49a7755.gif\";","export default __webpack_public_path__ + \"static/media/Knight.bbb32b24.gif\";","import Mage from \"../Assets/Mage.gif\";\r\nimport Rouge from \"../Assets/Rouge.gif\";\r\nimport Knight from \"../Assets/Knight.gif\";\r\n\r\nconst Class = ({ changePage, resetPlayer, currentPlayer }) => {\r\n  return (\r\n    <div className=\"ClassPage\">\r\n      <h1>Choose Your Class</h1>\r\n      <div className=\"Player_Container\">\r\n        {/* MAGE */}\r\n        <div className=\"Mage\">\r\n          <img className=\"Mage_Img\" src={Mage} alt=\"Mage Gif\" />\r\n          <div\r\n            className={` ${\r\n              currentPlayer && currentPlayer._classType === \"Mage\"\r\n                ? \"Clicked\"\r\n                : \" \"\r\n            } Character_Button `}\r\n          >\r\n            <h2 onClick={() => resetPlayer(\"Mage\")}>The Mage</h2>\r\n          </div>\r\n        </div>\r\n        {/* ROUGE */}\r\n        <div className=\"Rouge\">\r\n          <img className=\"Rouge_Img\" src={Rouge} alt=\"Rouge Gif\" />\r\n          <div\r\n            className={` ${\r\n              currentPlayer && currentPlayer._classType === \"Rouge\"\r\n                ? \"Clicked\"\r\n                : \" \"\r\n            } Character_Button `}\r\n          >\r\n            <h2 onClick={() => resetPlayer(\"Rouge\")}>The Rouge</h2>\r\n          </div>\r\n        </div>\r\n        {/* KNIGHT */}\r\n        <div className=\"Knight\">\r\n          <img className=\"Knight_Img\" src={Knight} alt=\"Knight Gif\" />\r\n\r\n          <div\r\n            className={` ${\r\n              currentPlayer && currentPlayer._classType === \"Knight\"\r\n                ? \"Clicked\"\r\n                : \" \"\r\n            } Character_Button `}\r\n          >\r\n            <h2 onClick={() => resetPlayer(\"Knight\")}>The Knight</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"Button_Container\">\r\n        {/* Start Button */}\r\n        {currentPlayer && (\r\n          <div className=\"Start_Game\" onClick={() => changePage(\"Game\")}>\r\n            <h2>Start Game</h2>\r\n          </div>\r\n        )}\r\n        {/* Back Button */}\r\n        <div className=\"Back_Button\" onClick={() => changePage(\"Home\")}>\r\n          <h2>Back</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Class;\r\n","export default __webpack_public_path__ + \"static/media/ShopKeeper.66f6a091.gif\";","import ShopKeeper from \"../Assets/ShopKeeper.gif\";\r\n\r\nconst Shop = ({\r\n  changePage,\r\n  currentPlayer,\r\n  setCurrentPlayer,\r\n  setScore,\r\n  specialAttackCount,\r\n  setSpecialAttack,\r\n}) => {\r\n  //Quit\r\n  const quit = () => {\r\n    changePage(\"Home\");\r\n    setCurrentPlayer(\"\");\r\n    setScore(0);\r\n  };\r\n  //Buy Potion\r\n  const buyPotion = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._health = newStatePlayer._maxHealth\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Special Attack\r\n  const buySpecialAttack = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 10) {\r\n      newStatePlayer._coin -= 10;\r\n      setSpecialAttack(specialAttackCount + 1);\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Attack Boost\r\n  const buyAttackBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._attack += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Defense Boost\r\n  const buyDefenseBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._defense += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Speed Boost\r\n  const buySpeedBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._speed += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Health boost\r\n  const buyHealthBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._maxHealth += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Special Boost\r\n  const buySpecialBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._special += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Shop_Page\">\r\n      <div className=\"Shop_Area\">\r\n        <div className=\"Player\">\r\n          <div className=\"Player_Stats\">\r\n            <div className=\"Stats\">\r\n              <h4>Hp: {currentPlayer._health}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Atk: {currentPlayer._attack}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Def: {currentPlayer._defense}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Spd: {currentPlayer._speed}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Coins: {currentPlayer._coin} </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"Current_Player\">\r\n            <img src={currentPlayer._img} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"Shop_Items\">\r\n          <div className=\"Item\" onClick={() => buyPotion()}>\r\n            <h3>Potion: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buySpecialAttack()}>\r\n            <h3>Special: 10 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buyHealthBoost()}>\r\n            <h3>Hp Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buyAttackBoost()}>\r\n            <h3>Atk Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buyDefenseBoost()}>\r\n            <h3>Def Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buySpeedBoost()}>\r\n            <h3>Spd Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buySpecialBoost()}>\r\n            <h3>Spl Boost: 5 Coin</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"Shop_Keeper\">\r\n          <h3>Hello Explorer, Coin for My Wares?</h3>\r\n          <img src={ShopKeeper} alt=\"Shop Keeper\" className=\"ShopeKeeper_Img\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"Button_Container\">\r\n        <div className=\"Back_Button\" onClick={() => changePage(\"Game\")}>\r\n          <h2>Back</h2>\r\n        </div>\r\n        <div className=\"Back_Button\" onClick={() => quit()}>\r\n          <h2>Quit Game</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","const HowToPlay = ({ changePage }) => {\r\n  return (\r\n    <div className=\"How_To_Play_Page\">\r\n      <h1>How To Play</h1>\r\n      <div className=\"Instructions_Container\">\r\n          <h2>Rules and Game Mechanics</h2>\r\n          <ul>\r\n              <li>Player starts with a choice of class which has unique stats and weapon.</li>\r\n              <li>The player then starts on the first floor of the Krypt and proceeds to fight enemys.</li>\r\n              <li>After each floor the player has a choice to enter a shop to heal or increase their power.</li>\r\n              <li>Purchasing items use coin which are earned from killing enemies.</li>\r\n              <li>Battles are conducted in waves. You fight enemeis one at a time. The higher speed goes first.</li>\r\n              <li>Player Loses the game if their hp falls to 0.</li>\r\n              <li>Player Wins if they defeat 1 of 3 final boss.</li>\r\n          </ul>\r\n          <h2>Menu Interaction</h2>\r\n          <ul>\r\n              <li>Start Game Button: Starts Game</li>\r\n              <li>Class selection Button: Mage, Rouge, and Warrior.</li>\r\n              <li>Attack, Defend, or Dodge Buttons : Defend is for warior and mage class while dodge is for rouge class.</li>\r\n              <li>Shop Interaction Buttons: For selecting items in a shop.</li>\r\n              <li>Continue to Next floor interaction</li>\r\n          </ul>\r\n      </div>\r\n      <div className=\"Back_Button\" onClick={() => changePage(\"Home\")}>\r\n        <h2>Back</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","import { useState } from \"react\";\r\nimport { Home, Class, Game, HowToPlay, Shop } from \"../Pages/\";\r\nimport Mage from \"../Assets/Mage.gif\";\r\nimport Rouge from \"../Assets/Rouge.gif\";\r\nimport Knight from \"../Assets/Knight.gif\";\r\nimport { player } from \"../Classes/Player\";\r\n\r\nfunction GameEnter() {\r\n  const [page, setPage] = useState(\"\");\r\n  const [currentPlayer, setCurrentPlayer] = useState();\r\n  const [score, setScore] = useState(0);\r\n  const [specialAttackCount, setSpecialAttack] = useState(1);\r\n\r\n  let Player;\r\n  const resetPlayer = (classType) => {\r\n    switch (classType) {\r\n      case \"Mage\":\r\n        Player = new player(classType, 35, 35, 5, 5, 6, 5, Mage, 0);\r\n        setCurrentPlayer(Player);\r\n        setSpecialAttack(1);\r\n        break;\r\n      case \"Rouge\":\r\n        Player = new player(classType, 30, 30, 7, 7, 3, 7, Rouge, 0);\r\n        setCurrentPlayer(Player);\r\n        setSpecialAttack(1);\r\n        break;\r\n      case \"Knight\":\r\n        Player = new player(classType, 45, 45, 7, 3, 7, 7, Knight, 0);\r\n        setCurrentPlayer(Player);\r\n        setSpecialAttack(1);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const changePage = (str) => {\r\n    setPage(str);\r\n  };\r\n\r\n  const pageToShow = () => {\r\n    switch (page) {\r\n      case \"Class\":\r\n        return (\r\n          <Class\r\n            changePage={changePage}\r\n            resetPlayer={resetPlayer}\r\n            currentPlayer={currentPlayer}\r\n          />\r\n        );\r\n      case \"HowToPlay\":\r\n        return <HowToPlay changePage={changePage} />;\r\n      case \"Game\":\r\n        return (\r\n          <Game\r\n            changePage={changePage}\r\n            currentPlayer={currentPlayer}\r\n            setCurrentPlayer={setCurrentPlayer}\r\n            score={score}\r\n            setScore={setScore}\r\n            specialAttackCount={specialAttackCount}\r\n            setSpecialAttack={setSpecialAttack}\r\n          />\r\n        );\r\n      case \"Shop\":\r\n        return (\r\n          <Shop\r\n            changePage={changePage}\r\n            currentPlayer={currentPlayer}\r\n            setCurrentPlayer={setCurrentPlayer}\r\n            specialAttackCount={specialAttackCount}\r\n            setSpecialAttack={setSpecialAttack}\r\n          />\r\n        );\r\n      default:\r\n        return <Home changePage={changePage} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Game_Container\">\r\n      <div className=\"Game_Space\">{pageToShow()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameEnter;\r\n","import GameEnter from './components/GameEnter';\nimport \"./App.css\";\nfunction App() {\n\n\n\n  return (\n    <GameEnter />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}