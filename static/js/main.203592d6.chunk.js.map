{"version":3,"sources":["Assets/Skull.gif","Pages/Home.js","Classes/Mob.js","Classes/Boss.js","Classes/Player.js","Assets/Skeleton_Warrior.gif","Assets/Skeleton_Archer.gif","Assets/Skeleton_Lancer.gif","Assets/Skeleton_Warlock.gif","Assets/Skeleton_King.gif","Assets/Skeleton_Rider.gif","Assets/Skeleton_Dragon.gif","Assets/Skeleton_Heratic.gif","Assets/Skeleton_Collector.gif","Pages/Game.js","Assets/Mage.gif","Assets/Rouge.gif","Assets/Knight.gif","Pages/Class.js","Assets/ShopKeeper.gif","Pages/Shop.js","Pages/HowToPlay.js","components/GameEnter.js","App.js","reportWebVitals.js","index.js"],"names":["Home","changePage","className","src","Skull","alt","onClick","mob","mobType","health","maxHealth","attack","speed","defense","coin","img","_mobType","_health","_maxHealth","_attack","_speed","_defense","_coin","_img","this","boss","bossType","_bossType","player","classType","special","_classType","_special","number","console","log","Game","currentPlayer","setCurrentPlayer","score","bossChoice","setBossChoice","setScore","specialAttackCount","setSpecialAttack","Health","Math","floor","random","boss1Health","boss1MaxHealth","boss2Health","boss2MaxHealth","boss3Health","boss3MaxHealth","boss4Health","boss4MaxHealth","boss5Health","boss5MaxHealth","enemy1","Skeleton_Warrior","enemy2","Skeleton_Archer","enemy3","Skeleton_Lancer","enemy4","Skeleton_Warlock","boss1","Skeleton_Rider","boss2","Skeleton_Heratic","boss3","Skeleton_Collector","boss4","Skeleton_King","boss5","Skeleton_Dragon","useState","undefined","currentMob","setCurrentMob","currentBoss","setCurrentBoss","loading","setLoading","damageTake","setDamageTaken","damageTakeM","setDamageTakenM","mobList","enemyChoice","bossList","Attack","newStatePlayer","newStateMob","battleDamageMob","battleDamagePlayer","newStateBoss","useEffect","style","color","defend","specialAttack","Class","resetPlayer","Mage","Rouge","Knight","Shop","buyPotion","buySpecialAttack","buyHealthBoost","buyAttackBoost","buyDefenseBoost","buySpeedBoost","buySpecialBoost","ShopKeeper","HowToPlay","GameEnter","Player","page","setPage","str","pageToShow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.203592d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Skull.d4a418e2.gif\";","import Skull from '../Assets/Skull.gif'\r\nconst Home = ({changePage}) => {\r\n    return (\r\n        <div>\r\n         <header>\r\n            <h1>Welcome To The Krypt Enter If You Dare!</h1>\r\n          </header>\r\n          <div className=\"Image_Container\">\r\n            <img className=\"Skull_img\" src= { Skull } alt=\"\" />\r\n          </div>\r\n          <div className=\"Buttons\">\r\n            <div className=\"Button_1\" onClick={()=>changePage('Class')}>\r\n              <h2>Enter The Krypt</h2>\r\n            </div>\r\n            <div className=\"Button_2\" onClick={()=>changePage('HowToPlay') }>\r\n              <h2>How To Play</h2>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      )\r\n}\r\n\r\nexport default Home","export class mob {\r\n    _mobType = \"\";\r\n    _health = 0;\r\n    _maxHealth = 0;\r\n    _attack = 0;\r\n    _speed = 0;\r\n    _defense = 0;\r\n    _coin = 0;\r\n    _img = '';\r\n  \r\n    constructor(mobType, health, maxHealth, attack, speed, defense,coin, img) {\r\n    this._mobType = mobType;\r\n    this._health = health;\r\n    this._maxHealth = maxHealth;\r\n    this._attack = attack;\r\n    this._speed = speed;\r\n    this._defense = defense;\r\n    this._coin = coin;\r\n    this._img = img;\r\n\r\n  }\r\n  start(){\r\n      return {\r\n        _mobType :this._mobType,\r\n        _health :this._health,\r\n        _maxHealth: this._maxHealth,\r\n        _attack :this._attack,\r\n        _speed :this._speed,\r\n        _defense :this._defense,\r\n        _img :this._img,\r\n        _coin :this._coin,\r\n\r\n\r\n      }\r\n  }\r\n  \r\n}\r\n","export class boss {\r\n    _bossType = \"\";\r\n    _health = 0;\r\n    _maxHealth = 0;\r\n    _attack = 0;\r\n    _speed = 0;\r\n    _defense = 0;\r\n    _coin = 0;\r\n    _img = '';\r\n  \r\n    constructor(bossType, health,  maxHealth, attack, speed, defense,coin, img) {\r\n    this._bossType = bossType;\r\n    this._health = health;\r\n    this._maxHealth = maxHealth;\r\n    this._attack = attack;\r\n    this._speed = speed;\r\n    this._defense = defense;\r\n    this._coin = coin;\r\n    this._img = img;\r\n\r\n  }\r\n  start(){\r\n      return {\r\n        _mobType :this._bossType,\r\n        _health :this._health,\r\n        _maxHealth: this._maxHealth,\r\n        _attack :this._attack,\r\n        _speed :this._speed,\r\n        _defense :this._defense,\r\n        _img :this._img,\r\n        _coin :this._coin,\r\n\r\n\r\n      }\r\n  }\r\n}\r\n","export class player {\r\n  _classType = \"\";\r\n  _maxHealth = 0;\r\n  _health = 0;\r\n  _attack = 0;\r\n  _speed = 0;\r\n  _defense = 0;\r\n  _special = 0;\r\n  _img = \"\";\r\n  _coin = 0;\r\n\r\n  constructor(classType, health, maxHealth, attack, speed, defense, special, img, coin) {\r\n    this._classType = classType;\r\n    this._maxHealth = maxHealth;\r\n    this._health = health;\r\n    this._attack = attack;\r\n    this._speed = speed;\r\n    this._defense = defense;\r\n    this._special =special;\r\n    this._img = img;\r\n    this._coin = coin;\r\n  }\r\n  start() {\r\n    return {\r\n      classType: this._classType,\r\n      _health: this._health,\r\n      _maxHealth: this._maxHealth,\r\n      _attack: this._attack,\r\n      _speed: this._speed,\r\n      _defense: this._defense,\r\n      _special: this._special,\r\n      _img: this._img,\r\n      _coin: this._coin,\r\n    };\r\n  }\r\n  increaseLife(number) {\r\n    this._health = this._health + number;\r\n    console.log({\r\n      classType: this._classType,\r\n      _health: this._health,\r\n      _attack: this._attack,\r\n      _speed: this._speed,\r\n      _defense: this._defense,\r\n      _coin: this._coin,\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Skeleton_Warrior.f4013fea.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Archer.2e9e5bda.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Lancer.dfc99c4c.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Warlock.d8a35ab7.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_King.dc3218c1.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Rider.e893007b.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Dragon.ad09202b.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Heratic.fd7dc328.gif\";","export default __webpack_public_path__ + \"static/media/Skeleton_Collector.d771cbab.gif\";","import { mob } from \"../Classes/Mob\";\r\nimport { boss } from \"../Classes/Boss\";\r\nimport { player } from \"../Classes/Player\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Skeleton_Warrior from \"../Assets/Skeleton_Warrior.gif\";\r\nimport Skeleton_Archer from \"../Assets/Skeleton_Archer.gif\";\r\nimport Skeleton_Lancer from \"../Assets/Skeleton_Lancer.gif\";\r\nimport Skeleton_Warlock from \"../Assets/Skeleton_Warlock.gif\";\r\nimport Skeleton_King from \"../Assets/Skeleton_King.gif\";\r\nimport Skeleton_Rider from \"../Assets/Skeleton_Rider.gif\";\r\nimport Skeleton_Dragon from \"../Assets/Skeleton_Dragon.gif\";\r\nimport Skeleton_Heratic from \"../Assets/Skeleton_Heratic.gif\";\r\nimport Skeleton_Collector from \"../Assets/Skeleton_Collector.gif\";\r\n\r\nconst Game = ({\r\n  changePage,\r\n  currentPlayer,\r\n  setCurrentPlayer,\r\n  score,\r\n  bossChoice,\r\n  setBossChoice,\r\n  setScore,\r\n  specialAttackCount,\r\n  setSpecialAttack,\r\n}) => {\r\n  //Mobs\r\n  let Health = Math.floor(Math.random() * (20 - 10) + 10);\r\n  let maxHealth = Health;\r\n\r\n  let boss1Health = Math.floor(Math.random() * (35 - 20) + 20);\r\n  let boss1MaxHealth = boss1Health;\r\n\r\n  let boss2Health = Math.floor(Math.random() * (35 - 20) + 20);\r\n  let boss2MaxHealth = boss2Health;\r\n\r\n  let boss3Health = Math.floor(Math.random() * (35 - 20) + 20);\r\n  let boss3MaxHealth = boss3Health;\r\n\r\n  let boss4Health = Math.floor(Math.random() * (40 - 25) + 25);\r\n  let boss4MaxHealth = boss4Health;\r\n\r\n  let boss5Health = Math.floor(Math.random() * (45 - 30) + 30);\r\n  let boss5MaxHealth = boss5Health;\r\n\r\n  let enemy1 = new mob(\r\n    \"Skeleton Warrior\",\r\n    Health,\r\n    maxHealth,\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Warrior\r\n  );\r\n  let enemy2 = new mob(\r\n    \"Skeleton Archer\",\r\n    Health,\r\n    maxHealth,\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Archer\r\n  );\r\n  let enemy3 = new mob(\r\n    \"Skeleton Lancer\",\r\n    Health,\r\n    maxHealth,\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Lancer\r\n  );\r\n  let enemy4 = new mob(\r\n    \"Skeleton Warlock\",\r\n    Health,\r\n    maxHealth,\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    Math.floor(Math.random() * (5 - 2) + 2),\r\n    10,\r\n    Skeleton_Warlock\r\n  );\r\n  //Bosses\r\n  let boss1 = new boss(\r\n    \"Skeleton Rider\",\r\n    boss1Health,\r\n    boss1MaxHealth,\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    20,\r\n    Skeleton_Rider\r\n  );\r\n  let boss2 = new boss(\r\n    \"Skeleton Heratic\",\r\n    boss2Health,\r\n    boss2MaxHealth,\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    20,\r\n    Skeleton_Heratic\r\n  );\r\n  let boss3 = new boss(\r\n    \"Skeleton Collector\",\r\n    boss3Health,\r\n    boss3MaxHealth,\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    Math.floor(Math.random() * (10 - 5) + 5),\r\n    20,\r\n    Skeleton_Collector\r\n  );\r\n  let boss4 = new boss(\r\n    \"Skeleton King\",\r\n    boss4Health,\r\n    boss4MaxHealth,\r\n    Math.floor(Math.random() * (12 - 8) + 8),\r\n    Math.floor(Math.random() * (12 - 8) + 8),\r\n    Math.floor(Math.random() * (12 - 8) + 8),\r\n    20,\r\n    Skeleton_King\r\n  );\r\n  let boss5 = new boss(\r\n    \"Skeleton Dragon\",\r\n    boss5Health,\r\n    boss5MaxHealth,\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    Math.floor(Math.random() * (15 - 10) + 10),\r\n    20,\r\n    Skeleton_Dragon\r\n  );\r\n\r\n  const [currentMob, setCurrentMob] = useState(undefined);\r\n  const [currentBoss, setCurrentBoss] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [damageTake,setDamageTaken] = useState(0)\r\n  const [damageTakeM,setDamageTakenM] = useState(0)\r\n\r\n  let mobList = [enemy1, enemy2, enemy3, enemy4];\r\n  let enemyChoice = Math.floor(Math.random() * (4 - 0) + 0);\r\n  let bossList = [boss1, boss2, boss3, boss4, boss5];\r\n\r\n  const nextButtonHandler = () => {\r\n    if (score % 5 === 0) {\r\n      setCurrentMob(undefined);\r\n      setCurrentBoss(bossList[bossChoice]);\r\n    } else {\r\n      setCurrentBoss(undefined);\r\n      setCurrentMob(mobList[enemyChoice]);\r\n    }\r\n  };\r\n  // Player Defend\r\n  const defend = () => {\r\n    if (currentMob) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateMob = { ...currentMob };\r\n      if (newStatePlayer._health - newStateMob._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamagePlayer = () => {\r\n          if (newStateMob._attack <= newStatePlayer._defense) {\r\n            return 0;\r\n          } else if (newStateMob._attack > newStatePlayer._defense) {\r\n            return newStateMob._attack - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStatePlayer._health =\r\n          newStatePlayer._health - battleDamagePlayer();\r\n        setCurrentPlayer(newStatePlayer);\r\n        setDamageTaken(battleDamagePlayer());\r\n      }\r\n    } else if (currentBoss) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateBoss = { ...currentBoss };\r\n      if (newStatePlayer._health - newStateBoss._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamagePlayer = () => {\r\n          if (currentBoss._attack <= newStatePlayer._defense) {\r\n            return 1;\r\n          } else if (currentBoss._attack > newStatePlayer._defense) {\r\n            return newStateBoss - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStatePlayer._health = newStatePlayer._health - battleDamagePlayer();\r\n        setCurrentPlayer(newStatePlayer);\r\n        setDamageTaken(battleDamagePlayer());\r\n      }\r\n    }\r\n  };\r\n  //Special Attack\r\n  const specialAttack = () => {\r\n    if (currentMob) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateMob = { ...currentMob };\r\n      if (newStatePlayer._health - newStateMob._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (newStateMob._health - (newStatePlayer._attack + newStatePlayer._special) <= 0) {\r\n        newStateMob._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentMob(newStateMob);\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamageMob = () => {\r\n          if (newStatePlayer._attack + newStatePlayer._special <= newStateMob._defense) {\r\n            return newStatePlayer._attack;\r\n          } else if (newStatePlayer._attack + newStatePlayer._special > newStateMob._defense) {\r\n            return ((newStatePlayer._attack + newStatePlayer._special) - newStateMob._defense);\r\n          }\r\n        };\r\n        let battleDamagePlayer = () => {\r\n          if (newStateMob._attack <= newStatePlayer._defense) {\r\n            return 1;\r\n          } else if (newStateMob._attack > newStatePlayer._defense) {\r\n            return newStateMob._attack - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStateMob._health =\r\n          newStateMob._health - battleDamageMob();\r\n        setCurrentMob(newStateMob);\r\n        setDamageTaken(battleDamagePlayer());\r\n        setDamageTakenM(battleDamageMob());\r\n        newStatePlayer._health =\r\n          newStatePlayer._health - battleDamagePlayer();\r\n        setCurrentPlayer(newStatePlayer);\r\n      }\r\n    } else if (currentBoss) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateBoss = { ...currentBoss };\r\n      if (newStatePlayer._health - newStateBoss._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (newStateBoss._health - (newStatePlayer._attack + newStatePlayer._special) <= 0) {\r\n        newStateBoss._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentMob(newStateBoss);\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamageMob = () => {\r\n          if (newStatePlayer._attack + newStatePlayer._special <= newStateBoss._defense) {\r\n            return newStatePlayer._attack;\r\n          } else if (newStatePlayer._attack + newStatePlayer._special > newStateBoss._defense) {\r\n            return ((newStatePlayer._attack + newStatePlayer._special) - newStateBoss._defense);\r\n          }\r\n        };\r\n        let battleDamagePlayer = () => {\r\n          if (newStateBoss._attack <= newStatePlayer._defense) {\r\n            return 1;\r\n          } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n            return newStateBoss._attack - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStateBoss._health =\r\n          newStateBoss._health - battleDamageMob();\r\n        setCurrentBoss(newStateBoss);\r\n        setDamageTaken(battleDamagePlayer());\r\n        setDamageTakenM(battleDamageMob());\r\n        newStatePlayer._health =\r\n          newStatePlayer._health - battleDamagePlayer();\r\n        setCurrentPlayer(newStatePlayer);\r\n      }\r\n    }\r\n    setSpecialAttack(specialAttackCount - 1);\r\n  };\r\n\r\n  // Player Attack\r\n  const Attack = () => {\r\n    if (currentMob) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateMob = { ...currentMob };\r\n      if (newStatePlayer._health - newStateMob._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (newStateMob._health - newStatePlayer._attack <= 0) {\r\n        newStateMob._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentMob(newStateMob);\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamageMob = () => {\r\n          if (newStatePlayer._attack <= newStateMob._defense) {\r\n            return 1;\r\n          } else if (newStatePlayer._attack > newStateMob._defense) {\r\n            return newStatePlayer._attack - newStateMob._defense;\r\n          }\r\n        };\r\n        let battleDamagePlayer = () => {\r\n          if (newStateMob._attack <= newStatePlayer._defense) {\r\n            return 1;\r\n          } else if (newStateMob._attack > newStatePlayer._defense) {\r\n            return newStateMob._attack - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStateMob._health =\r\n          newStateMob._health - battleDamageMob();\r\n        setCurrentMob(newStateMob);\r\n        setDamageTaken(battleDamagePlayer());\r\n        setDamageTakenM(battleDamageMob());\r\n        newStatePlayer._health =\r\n          newStatePlayer._health - battleDamagePlayer();\r\n        setCurrentPlayer(newStatePlayer);\r\n      }\r\n    } else if (currentBoss) {\r\n      const newStatePlayer = { ...currentPlayer };\r\n      const newStateBoss = { ...currentBoss };\r\n      if (newStatePlayer._health - newStateBoss._attack <= 0) {\r\n        newStatePlayer._health = 0;\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else if (newStateBoss._health - newStatePlayer._attack <= 0) {\r\n        newStateBoss._health = 0;\r\n        newStatePlayer._coin = newStatePlayer._coin + 5;\r\n        setCurrentBoss(newStateBoss);\r\n        setCurrentPlayer(newStatePlayer);\r\n      } else {\r\n        let battleDamageMob = () => {\r\n          if (newStatePlayer._attack <= newStateBoss._defense) {\r\n            return 1;\r\n          } else if (newStatePlayer._attack > newStateBoss._defense) {\r\n            return newStatePlayer._attack - newStateBoss._defense;\r\n          }\r\n        };\r\n        let battleDamagePlayer = () => {\r\n          if (newStateBoss._attack <= newStatePlayer._defense) {\r\n            return 1;\r\n          } else if (newStateBoss._attack > newStatePlayer._defense) {\r\n            return newStateBoss._attack - newStatePlayer._defense;\r\n          }\r\n        };\r\n        newStateBoss._health =\r\n          newStateBoss._health - battleDamageMob();\r\n        setCurrentBoss(newStateBoss);\r\n        setDamageTaken(battleDamagePlayer());\r\n        setDamageTakenM(battleDamageMob());\r\n        newStatePlayer._health =\r\n          newStatePlayer._health - battleDamagePlayer();\r\n        setCurrentPlayer(newStatePlayer);\r\n      }\r\n    }\r\n  };\r\n  //Quit\r\n  const quit = () => {\r\n    changePage(\"Home\");\r\n    setCurrentPlayer(\"\");\r\n    setScore(1);\r\n    setSpecialAttack(0);\r\n    setBossChoice(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const a = () => {\r\n      setLoading(true);\r\n      if (!currentMob && !currentBoss) {\r\n        if(score % 5 === 0 ){\r\n          setCurrentBoss(bossList[bossChoice])\r\n        }else {\r\n          if(score > 5 && score < 10){\r\n            setCurrentMob(mobList[enemyChoice]);\r\n          }\r\n          setCurrentMob(mobList[enemyChoice]);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    a();\r\n  }, [score, enemyChoice]);\r\n\r\n  useEffect(() => {\r\n    if (score % 5 === 0) {\r\n      if (currentMob && currentBoss) {\r\n        setCurrentBoss(bossList[bossChoice]);\r\n      }\r\n    }\r\n  }, [score,bossChoice]);\r\n\r\n  useEffect(() => {\r\n    if ((currentMob && currentMob._health) <= 0) {\r\n      setScore(score + 1);\r\n    } else if ((currentBoss && currentBoss._health) <= 0) {\r\n      setScore(score + 1);\r\n      setBossChoice(bossChoice + 1);\r\n    }\r\n  }, [currentMob, currentBoss]);\r\n\r\n  if (loading) {\r\n    return <h1 style={{ color: \"bisque\" }}> ...</h1>;\r\n  } else\r\n    return (\r\n      <div className=\"Game_Page\">\r\n        <h1>Clear The Krypt</h1>\r\n        <div className=\"Player_Area\">\r\n          <div className=\"Player\">\r\n            <div>\r\n              <h4>{currentPlayer._classType}</h4>\r\n            </div>\r\n            <div className=\"Player_Stats\">\r\n              <div className=\"Stats\">\r\n                <h4>Hp: {currentPlayer._health} / {currentPlayer._maxHealth}</h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>Atk: {currentPlayer._attack}</h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>Def: {currentPlayer._defense}</h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>Spd: {currentPlayer._speed}</h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>Coins: {currentPlayer._coin} </h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"Current_Player\">\r\n              <img src={currentPlayer._img} alt=\"\" />\r\n            </div>\r\n            {(currentMob && currentMob._health) ||\r\n            (currentBoss && currentBoss._health) > 0 ? (\r\n              \" \"\r\n            ) : (\r\n              <div className=\"Shop_Button \" onClick={() => changePage(\"Shop\")}>\r\n                <h4>Shop</h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"Mob\">\r\n            <div>\r\n              <h4>\r\n                {\" \"}\r\n                {(currentMob && currentMob._mobType) ||\r\n                  (currentBoss && currentBoss._bossType)}{\" \"}\r\n              </h4>\r\n            </div>\r\n            <div className=\"Mob_Stats\">\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Hp:{\" \"}\r\n                  {(currentMob && currentMob._health) ||\r\n                    (currentBoss && currentBoss._health)}\r\n                    / {\"\"}\r\n                    {(currentMob && currentMob._maxHealth) ||\r\n                    (currentBoss && currentBoss._maxHealth)}\r\n                    \r\n                </h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Atk:{\" \"}\r\n                  {(currentMob && currentMob._attack) ||\r\n                    (currentBoss && currentBoss._attack)}\r\n                </h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Def:{\" \"}\r\n                  {(currentMob && currentMob._defense) ||\r\n                    (currentBoss && currentBoss._defense)}\r\n                </h4>\r\n              </div>\r\n              <div className=\"Stats\">\r\n                <h4>\r\n                  Spd:{\" \"}\r\n                  {(currentMob && currentMob._speed) ||\r\n                    (currentBoss && currentBoss._speed)}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"Current_Player\">\r\n              <img\r\n                src={\r\n                  (currentMob && currentMob._img) ||\r\n                  (currentBoss && currentBoss._img)\r\n                }\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            {(currentMob && currentMob._health) ||\r\n            (currentBoss && currentBoss._health) > 0 ? (\r\n              \" \"\r\n            ) : (\r\n              <div\r\n                className=\"NextBattle_Button\"\r\n                onClick={() => {\r\n                  nextButtonHandler();\r\n                }}\r\n              >\r\n                <h4>Next Battle</h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"Game_Events\">\r\n            {(currentMob && currentMob._health === 0 || currentBoss && currentBoss._health === 0) || currentPlayer && currentPlayer._health === 0 ? (\" \") : (<h3>{currentPlayer._classType} lost {damageTake} Hp from {(currentMob && currentMob._mobType) || (currentBoss && currentBoss._bossType)} & </h3>)}\r\n            {(currentMob && currentMob._health === 0 || currentBoss && currentBoss._health === 0) || (currentPlayer && currentPlayer._health) === 0 ? (\" \") : (<h3>{(currentMob && currentMob._mobType) || (currentBoss && currentBoss._bossType)} Lost {damageTakeM} Hp</h3>)}\r\n            {(currentMob && currentMob._health === 0 || currentBoss && currentBoss._health === 0)  ? (<h3>{(currentMob && currentMob._mobType) || (currentBoss && currentBoss._bossType)} Defeated </h3>) : (\" \")}\r\n            {(currentPlayer && currentPlayer._health) > 0 ? (\" \") : (<h3> You Were Defeated By {(currentMob && currentMob._mobType) || (currentBoss && currentBoss._bossType)}</h3>)}\r\n          </div>\r\n        <div className=\"Action_Containers\">\r\n          {(currentMob && currentMob._health === 0) ||\r\n          currentPlayer._health === 0 || (currentBoss && currentBoss._health === 0) ? (\r\n            \" \"\r\n          ) : (\r\n            <>\r\n              {currentMob && currentMob._mobType ? ( <div\r\n                className=\"Attack_Button\"\r\n                onClick={() =>\r\n                  Attack(\r\n                  )\r\n                }\r\n              >\r\n                <h2>Attack</h2>\r\n              </div>) : (<div\r\n                className=\"Attack_Button\"\r\n                onClick={() =>\r\n                  Attack(\r\n                  )\r\n                }\r\n              >\r\n                <h2>Attack</h2>\r\n              </div>)}\r\n              <div\r\n                className=\"Defend_Button\"\r\n                onClick={() =>\r\n                  defend()\r\n                }\r\n              >\r\n                <h2>Defend/Dodge</h2>\r\n              </div>\r\n              {specialAttackCount < 1 ? (\r\n                \" \"\r\n              ) : (\r\n                <div\r\n                  className=\"SpecialAttack_Button\"\r\n                  onClick={() =>\r\n                    specialAttack(\r\n                    )\r\n                  }\r\n                >\r\n                  <h2>Special Attack</h2>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"Back_Button\" onClick={() => quit()}>\r\n          <h2>Quit Game</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/Mage.ad1c480e.gif\";","export default __webpack_public_path__ + \"static/media/Rouge.f49a7755.gif\";","export default __webpack_public_path__ + \"static/media/Knight.bbb32b24.gif\";","import Mage from \"../Assets/Mage.gif\";\r\nimport Rouge from \"../Assets/Rouge.gif\";\r\nimport Knight from \"../Assets/Knight.gif\";\r\n\r\nconst Class = ({ changePage, resetPlayer, currentPlayer }) => {\r\n  return (\r\n    <div className=\"ClassPage\">\r\n      <h1>Choose Your Class</h1>\r\n      <div className=\"Player_Container\">\r\n        {/* MAGE */}\r\n        <div className=\"Mage\">\r\n          <img className=\"Mage_Img\" src={Mage} alt=\"Mage Gif\" />\r\n          <div\r\n            className={` ${\r\n              currentPlayer && currentPlayer._classType === \"Mage\"\r\n                ? \"Clicked\"\r\n                : \" \"\r\n            } Character_Button `}\r\n          >\r\n            <h2 onClick={() => resetPlayer(\"Mage\")}>The Mage</h2>\r\n          </div>\r\n        </div>\r\n        {/* ROUGE */}\r\n        <div className=\"Rouge\">\r\n          <img className=\"Rouge_Img\" src={Rouge} alt=\"Rouge Gif\" />\r\n          <div\r\n            className={` ${\r\n              currentPlayer && currentPlayer._classType === \"Rouge\"\r\n                ? \"Clicked\"\r\n                : \" \"\r\n            } Character_Button `}\r\n          >\r\n            <h2 onClick={() => resetPlayer(\"Rouge\")}>The Rouge</h2>\r\n          </div>\r\n        </div>\r\n        {/* KNIGHT */}\r\n        <div className=\"Knight\">\r\n          <img className=\"Knight_Img\" src={Knight} alt=\"Knight Gif\" />\r\n\r\n          <div\r\n            className={` ${\r\n              currentPlayer && currentPlayer._classType === \"Knight\"\r\n                ? \"Clicked\"\r\n                : \" \"\r\n            } Character_Button `}\r\n          >\r\n            <h2 onClick={() => resetPlayer(\"Knight\")}>The Knight</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"Button_Container\">\r\n        {/* Start Button */}\r\n        {currentPlayer && (\r\n          <div className=\"Start_Game\" onClick={() => changePage(\"Game\")}>\r\n            <h2>Start Game</h2>\r\n          </div>\r\n        )}\r\n        {/* Back Button */}\r\n        <div className=\"Back_Button\" onClick={() => changePage(\"Home\")}>\r\n          <h2>Back</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Class;\r\n","export default __webpack_public_path__ + \"static/media/ShopKeeper.66f6a091.gif\";","import ShopKeeper from \"../Assets/ShopKeeper.gif\";\r\n\r\nconst Shop = ({\r\n  changePage,\r\n  currentPlayer,\r\n  setCurrentPlayer,\r\n  setScore,\r\n  specialAttackCount,\r\n  setSpecialAttack,\r\n  setBossChoice,\r\n}) => {\r\n  //Quit\r\n  const quit = () => {\r\n    changePage(\"Home\");\r\n    setCurrentPlayer(\"\");\r\n    setBossChoice(0)\r\n    setScore(1);\r\n  };\r\n  //Buy Potion\r\n  const buyPotion = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._health = newStatePlayer._maxHealth\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Special Attack\r\n  const buySpecialAttack = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 10) {\r\n      newStatePlayer._coin -= 10;\r\n      setSpecialAttack(specialAttackCount + 1);\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Attack Boost\r\n  const buyAttackBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._attack += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Defense Boost\r\n  const buyDefenseBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._defense += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Speed Boost\r\n  const buySpeedBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._speed += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Health boost\r\n  const buyHealthBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._maxHealth += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  //Buy Special Boost\r\n  const buySpecialBoost = () => {\r\n    const newStatePlayer = { ...currentPlayer };\r\n    if (newStatePlayer._coin >= 5) {\r\n      newStatePlayer._coin -= 5;\r\n      newStatePlayer._special += 1;\r\n      setCurrentPlayer(newStatePlayer);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Shop_Page\">\r\n      <div className=\"Shop_Area\">\r\n        <div className=\"Player\">\r\n          <div className=\"Player_Stats\">\r\n            <div className=\"Stats\">\r\n              <h4>Hp: {currentPlayer._health}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Atk: {currentPlayer._attack}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Def: {currentPlayer._defense}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Spd: {currentPlayer._speed}</h4>\r\n            </div>\r\n            <div className=\"Stats\">\r\n              <h4>Coins: {currentPlayer._coin} </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"Current_Player\">\r\n            <img src={currentPlayer._img} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"Shop_Items\">\r\n          <div className=\"Item\" onClick={() => buyPotion()}>\r\n            <h3>Potion: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buySpecialAttack()}>\r\n            <h3>Special: 10 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buyHealthBoost()}>\r\n            <h3>Hp Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buyAttackBoost()}>\r\n            <h3>Atk Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buyDefenseBoost()}>\r\n            <h3>Def Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buySpeedBoost()}>\r\n            <h3>Spd Boost: 5 Coin</h3>\r\n          </div>\r\n          <div className=\"Item\" onClick={() => buySpecialBoost()}>\r\n            <h3>Spl Boost: 5 Coin</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"Shop_Keeper\">\r\n          <h3>Hello Explorer, Coin for My Wares?</h3>\r\n          <img src={ShopKeeper} alt=\"Shop Keeper\" className=\"ShopeKeeper_Img\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"Button_Container\">\r\n        <div className=\"Back_Button\" onClick={() => changePage(\"Game\")}>\r\n          <h2>Back</h2>\r\n        </div>\r\n        <div className=\"Back_Button\" onClick={() => quit()}>\r\n          <h2>Quit Game</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","const HowToPlay = ({ changePage }) => {\r\n  return (\r\n    <div className=\"How_To_Play_Page\">\r\n      <h1>How To Play</h1>\r\n      <div className=\"Instructions_Container\">\r\n          <h2>Rules and Game Mechanics</h2>\r\n          <ul>\r\n              <li>Player starts with a choice of class which has unique stats and weapon.</li>\r\n              <li>The player then starts on the first floor of the Krypt and proceeds to fight enemys.</li>\r\n              <li>After each floor the player has a choice to enter a shop to heal or increase their power.</li>\r\n              <li>Purchasing items use coin which are earned from killing enemies.</li>\r\n              <li>Battles are conducted in waves. You fight enemeis one at a time. The higher speed goes first.</li>\r\n              <li>Player Loses the game if their hp falls to 0.</li>\r\n              <li>Player Wins if they defeat 1 of 3 final boss.</li>\r\n          </ul>\r\n          <h2>Menu Interaction</h2>\r\n          <ul>\r\n              <li>Start Game Button: Starts Game</li>\r\n              <li>Class selection Button: Mage, Rouge, and Warrior.</li>\r\n              <li>Attack, Defend, or Dodge Buttons : Defend is for warior and mage class while dodge is for rouge class.</li>\r\n              <li>Shop Interaction Buttons: For selecting items in a shop.</li>\r\n              <li>Continue to Next floor interaction</li>\r\n          </ul>\r\n      </div>\r\n      <div className=\"Back_Button\" onClick={() => changePage(\"Home\")}>\r\n        <h2>Back</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n","import { useState } from \"react\";\r\nimport { Home, Class, Game, HowToPlay, Shop } from \"../Pages/\";\r\nimport Mage from \"../Assets/Mage.gif\";\r\nimport Rouge from \"../Assets/Rouge.gif\";\r\nimport Knight from \"../Assets/Knight.gif\";\r\nimport { player } from \"../Classes/Player\";\r\n\r\nfunction GameEnter() {\r\n  const [page, setPage] = useState(\"\");\r\n  const [currentPlayer, setCurrentPlayer] = useState();\r\n  const [score, setScore] = useState(1);\r\n  const [specialAttackCount, setSpecialAttack] = useState(1);\r\n  const [bossChoice, setBossChoice] = useState(0);\r\n\r\n  let Player;\r\n  const resetPlayer = (classType) => {\r\n    switch (classType) {\r\n      case \"Mage\":\r\n        Player = new player(classType, 35, 35, 8, 5, 3, 8, Mage, 0);\r\n        setCurrentPlayer(Player);\r\n        setSpecialAttack(1);\r\n        break;\r\n      case \"Rouge\":\r\n        Player = new player(classType, 30, 30, 7, 7, 5, 7, Rouge, 0);\r\n        setCurrentPlayer(Player);\r\n        setSpecialAttack(1);\r\n        break;\r\n      case \"Knight\":\r\n        Player = new player(classType, 45, 45, 9, 3, 7, 9, Knight, 0);\r\n        setCurrentPlayer(Player);\r\n        setSpecialAttack(1);\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const changePage = (str) => {\r\n    setPage(str);\r\n  };\r\n\r\n  const pageToShow = () => {\r\n    switch (page) {\r\n      case \"Class\":\r\n        return (\r\n          <Class\r\n            changePage={changePage}\r\n            resetPlayer={resetPlayer}\r\n            currentPlayer={currentPlayer}\r\n          />\r\n        );\r\n      case \"HowToPlay\":\r\n        return <HowToPlay changePage={changePage} />;\r\n      case \"Game\":\r\n        return (\r\n          <Game\r\n            changePage={changePage}\r\n            currentPlayer={currentPlayer}\r\n            setCurrentPlayer={setCurrentPlayer}\r\n            bossChoice={bossChoice}\r\n            setBossChoice={setBossChoice}\r\n            score={score}\r\n            setScore={setScore}\r\n            specialAttackCount={specialAttackCount}\r\n            setSpecialAttack={setSpecialAttack}\r\n          />\r\n        );\r\n      case \"Shop\":\r\n        return (\r\n          <Shop\r\n            changePage={changePage}\r\n            currentPlayer={currentPlayer}\r\n            setCurrentPlayer={setCurrentPlayer}\r\n            bossChoice={bossChoice}\r\n            setBossChoice={setBossChoice}\r\n            specialAttackCount={specialAttackCount}\r\n            setSpecialAttack={setSpecialAttack}\r\n          />\r\n        );\r\n      default:\r\n        return <Home changePage={changePage} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Game_Container\">\r\n      <div className=\"Game_Space\">{pageToShow()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameEnter;\r\n","import GameEnter from './components/GameEnter';\nimport \"./App.css\";\nfunction App() {\n\n\n\n  return (\n    <GameEnter />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}